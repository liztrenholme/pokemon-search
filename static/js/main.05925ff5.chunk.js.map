{"version":3,"sources":["modules/index.js","components/images/Pokeball.png","components/Evolution/index.js","components/Explore/index.js","components/OfficialArtModal/index.js","components/main/main.js","App.js","reportWebVitals.js","index.js"],"names":["getPokemonData","pokemonName","a","data","axios","get","toLowerCase","console","log","Object","keys","getAnyUrl","url","getRandomPokemon","randNum","Math","floor","random","Evolution","className","style","display","maxWidth","justifyContent","flexWrap","flexDirection","maxHeight","transform","this","props","evolutionChain","map","form","level","selectedLevel","onClick","handleSearchCall","imageUrl","split","length","name","evolveItemImg","src","alt","evolveItem","Component","Explore","state","displayed","handleFillInputAndCallSearch","input","populateInput","handleDisplayList","setState","header","regionSpecies","i","OfficialArtModal","handleDisplayArt","officialArtImg","Main","isLoading","shinyMode","pokemon","imgFront","imgBack","imgFrontFemale","imgBackFemale","imgFrontShiny","imgBackShiny","imgFrontShinyFemale","imgBackShinyFemale","searchInput","moves","types","deName","jaName","isBaby","isMythical","isLegendary","generation","habitat","growthRate","shape","varieties","allPokemon","genus","mainRegion","description","pokedexId","shapeSpecies","growthRateSpecies","handleUpdateInput","e","target","value","handleOnEnter","key","toggleShinyMode","checkPokemonName","find","includes","newPokemon","evolves","varietiesList","species","speciesData","is_baby","is_mythical","is_legendary","mainRegionData","main_region","pokemon_species","shapeSpeciesData","growth_rate","growthRateSpeciesData","genera","language","flavor_text_entries","flavor_text","forEach","push","evolution","evolution_chain","firstLevel","chain","evol3","evolves_to","manyEvols","evolution_details","held_item","join","evolveItemUrl","itemData","sprites","default","names","move","type","typeData","front_default","back_default","front_shiny","back_shiny","front_female","back_female","front_shiny_female","back_shiny_female","officialArt","other","pokedex_numbers","entry_number","foundAlternativeName","trim","handleRandomPokemon","randomPokemonData","id","clearInput","results","toUpperCase","slice","lastLetters","temp","gen","habitatDisplayed","growthRateDisplayed","shapeDisplayed","formatLev2","onKeyDown","onChange","placeholder","Pokeball","backgroundColor","border","borderRadius","color","marginTop","variety","filter","j","App","json","version","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05925ff5.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport axios from 'axios';\n\nexport const getPokemonData = async (pokemonName) => {\n  let data = {};\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/pokemon/${typeof pokemonName === 'string' ? pokemonName.toLowerCase() : pokemonName}`);\n    \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getAnyUrl = async (url) => {\n  let data = {};\n  try {\n    data = await axios.get(url);\n    \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getEvolutionData = async (pokemonId) => {\n  let data = {};\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/evolution-chain/${pokemonId}/`);\n    \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getPokemonSpeciesData = async (pokemonId) => {\n  let data = {};\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${pokemonId}`);\n        \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getRandomPokemon = async () => {\n  let data = {};\n  const randNum = Math.floor(Math.random() * 898);\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${randNum}`);\n        \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};","export default __webpack_public_path__ + \"static/media/Pokeball.32cfee51.png\";","import './evolution.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Evolution extends Component {\n  render() {\n    return (\n      <div className='level-two'\n        style={{\n          display: 'flex',\n          maxWidth: '6em',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n          flexDirection: 'column',\n          maxHeight: '30em',\n          transform: 'scale(0.75, 0.75)'\n        }}>\n        {this.props.evolutionChain.map((form) => form.level === this.props.selectedLevel ? <div onClick={() => this.props.handleSearchCall(form.imageUrl?.split('/')[form.imageUrl.split('/').length - 1].split('.png')[0] || form.name)} \n          className='evolve-item' \n          key={form.name}>\n          <div className='images-box'>\n            {form.evolveItemImg ? <img className='held-item' src={form.evolveItemImg} alt={form.evolveItem} /> : null}\n            <img className='evolImg' src={form.imageUrl} alt={form.name} />\n          </div>\n          {form.evolveItem ? <span>+ {form.evolveItem}</span> : null}\n          {form.name}\n\n        </div> : null)}\n      </div>\n    );\n  }\n}\n\nEvolution.propTypes = {\n  evolutionChain: PropTypes.array,\n  handleSearchCall: PropTypes.func,\n  selectedLevel: PropTypes.number\n};\n\nexport default Evolution;","/* eslint-disable no-console */\nimport './explore.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Explore extends Component {\n    state = {\n      displayed: false\n    }\n\n    handleFillInputAndCallSearch = (input) => {\n      this.props.populateInput(input);\n      this.props.handleSearchCall(input);\n    }\n\n    handleDisplayList = () => this.state.displayed ? this.setState({displayed: false}) : this.setState({displayed: true})\n    render() {\n      const {header, regionSpecies} = this.props;\n      return (\n        <div className='explore-container'>\n          <div className='variety-btn' onClick={this.handleDisplayList}>Show all {header} species</div>\n          {this.state.displayed\n            ? <div className='x-box' onClick={this.handleDisplayList}>x</div> : null}\n          {this.state.displayed\n            ? <div className='explore-species-modal'>\n              <div className='fixed-header'>\n                <p className='header-title'>{this.props.header} ({regionSpecies.length})</p>\n                <div className='x-box' onClick={this.handleDisplayList}>x</div>\n              </div>\n              {regionSpecies && regionSpecies.length ? regionSpecies.map(i => <p className='species-result' onClick={() => this.handleFillInputAndCallSearch(i.name)} key={i.name}>\n                <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i?.url?.split('/')[6]}.png`} alt={i.name} />\n                {i.name}\n              </p>\n              ) : null}\n            </div>\n            : null}\n        </div>\n      );\n    }\n}\n\nExplore.propTypes = {\n  header: PropTypes.string,\n  allPokemon: PropTypes.array,\n  regionSpecies: PropTypes.array,\n  handleSearchCall: PropTypes.func,\n  populateInput: PropTypes.func\n};\n\nexport default Explore;","/* eslint-disable no-console */\nimport './officialArt.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass OfficialArtModal extends Component {\n    state = {\n      displayed: false\n    }\n\n    handleDisplayArt = () => this.state.displayed ? this.setState({displayed: false}) : this.setState({displayed: true})\n    render() {\n      const {pokemonName, officialArtImg} = this.props;\n      return (\n        <div className='art-container'>\n          <div className='variety-btn' onClick={this.handleDisplayArt}>Official Artwork</div>\n          {this.state.displayed\n            ? <div className='x-box' onClick={this.handleDisplayArt}>x</div> : null}\n          {this.state.displayed\n            ? <div className='art-modal'>\n              <div className='fixed-header'>\n                <p className='header-title'>{pokemonName}</p>\n                <div className='x-box' onClick={this.handleDisplayArt}>x</div>\n              </div>\n              <img className='art-image' src={officialArtImg} alt={pokemonName} />\n            </div>\n            : null}\n        </div>\n      );\n    }\n}\n\nOfficialArtModal.propTypes = {\n  officialArtImg: PropTypes.string,\n  pokemonName: PropTypes.string,\n};\n\nexport default OfficialArtModal;","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport './main.css';\n// import PropTypes from 'prop-types';\nimport 'whatwg-fetch';\nimport {\n  getPokemonData,\n  // getPokemonSpeciesData,\n  getRandomPokemon,\n  //  getPokemonForms\n  getAnyUrl\n} from '../../modules';\nimport Pokeball from '../images/Pokeball.png';\nimport Evolution from '../Evolution';\nimport Explore from '../Explore';\nimport OfficialArtModal from '../OfficialArtModal';\nimport axios from 'axios';\n\nclass Main extends Component {\n    state = {\n      isLoading: false,\n      shinyMode: false,\n      pokemon: '',\n      imgFront: '',\n      imgBack: '',\n      imgFrontFemale: '',\n      imgBackFemale: '',\n      imgFrontShiny: '',\n      imgBackShiny: '',\n      imgFrontShinyFemale: '',\n      imgBackShinyFemale: '',\n      searchInput: '',\n      moves: [],\n      types: [],\n      evolutionChain: [],\n      deName: '',\n      jaName: '',\n      isBaby: false,\n      isMythical: false,\n      isLegendary: false,\n      generation: '',\n      habitat: '',\n      growthRate: '',\n      shape: '',\n      varieties: [],\n      allPokemon: [],\n      genus: '',\n      mainRegion: '',\n      description: '',\n      pokedexId: '',\n      regionSpecies: '',\n      shapeSpecies: '',\n      growthRateSpecies: ''\n    }\n\n    async componentDidMount() {\n      const allPokemon = await getAnyUrl('https://pokeapi.co/api/v2/pokemon/?limit=1200');\n      if (allPokemon && allPokemon.results) {\n        this.setState({allPokemon: allPokemon.results});\n      }\n    }\n\n    handleUpdateInput = (e) => {\n      this.setState({ searchInput: e.target.value });\n    }\n\n    handleOnEnter = (e) => {\n      if (e.key === 'Enter') {\n        this.handleSearchCall();\n      }\n    }\n\n    toggleShinyMode = () => this.state.shinyMode ? this.setState({shinyMode: false}) : this.setState({shinyMode: true})\n\n    checkPokemonName = (pokemonName) => {\n      return this.state.allPokemon.find(i => i.name.includes(pokemonName));\n    }\n\n    populateInput = (input) => this.setState({searchInput: input})\n    \n    handleSearchCall = async (newPokemon) => {\n      if ((newPokemon && typeof newPokemon === 'string') || (newPokemon && typeof newPokemon === 'number') || this.state.searchInput) {\n        this.setState({ isLoading: true });\n        const pokemon = await getPokemonData((typeof newPokemon === 'string') || (typeof newPokemon === 'number') ? newPokemon : this.state.searchInput);\n        let evolves = [];\n        let deName = '';\n        let jaName = '';\n        let isBaby = false;\n        let isMythical = false;\n        let isLegendary = false;\n        let generation = '';\n        let habitat = '';\n        let growthRate = '';\n        let shape = '';\n        let genus = '';\n        const varietiesList = [];\n        let mainRegion = '';\n        let description = '';\n        let regionSpecies = '';\n        let shapeSpecies = '';\n        let growthRateSpecies = '';\n        if (pokemon && pokemon.name) {\n        // const pokemonId = pokemon.id;\n          const speciesData = await getAnyUrl(pokemon.species.url); // getPokemonSpeciesData(pokemon.species.url || pokemonId);\n          isBaby = speciesData.is_baby;\n          isMythical = speciesData.is_mythical;\n          isLegendary = speciesData.is_legendary;\n          generation = speciesData.generation?.name;\n          const mainRegionData = await getAnyUrl(speciesData.generation?.url);\n          mainRegion = mainRegionData?.main_region?.name;\n          regionSpecies = mainRegionData?.pokemon_species;\n          const shapeSpeciesData = await getAnyUrl(speciesData?.shape?.url);\n          if (shapeSpeciesData.pokemon_species) {\n            shapeSpecies = shapeSpeciesData.pokemon_species;\n          }\n          const growthRateSpeciesData = await getAnyUrl(speciesData?.growth_rate?.url);\n          if (growthRateSpeciesData.pokemon_species) {\n            growthRateSpecies = growthRateSpeciesData.pokemon_species;\n          }\n          habitat = speciesData.habitat;\n          growthRate = speciesData.growth_rate?.name;\n          shape = speciesData.shape?.name;\n\n          speciesData.genera?.find(i => i.language.name === 'en').genus;\n          description = speciesData.flavor_text_entries?.find(i => i.language.name === 'en').flavor_text;\n          const varieties = speciesData.varieties;\n        \n          if (varieties && varieties.length) {\n            varieties.forEach(form => !form.pokemon?.name.includes('world-cap') \n              ? varietiesList.push({name: form.pokemon?.name, url: form.pokemon?.url}) : null);\n          }\n          let evolution = null;\n          if (speciesData && speciesData.evolution_chain) {      \n            evolution = await axios.get(speciesData.evolution_chain.url);\n          }\n          if (evolution && evolution.data) {\n            const firstLevel = evolution.data.chain.species.name;\n            const evol3 = evolution.data.chain.evolves_to[0]?.evolves_to[0]?.evolves_to[0]?.species.name;\n\n            const manyEvols = [];\n            // level 2\n            evolution.data.chain.evolves_to.forEach(i => manyEvols.push(\n              {\n                level: 2, \n                name: i.species.name, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i.species.url.split('/')[i.species.url.split('/').length - 2]}.png`,\n                evolveItem: i.evolution_details[0].held_item?.name.split('-').join(' '),\n                evolveItemUrl: i.evolution_details[0].held_item?.url\n              }\n            ));\n            // level 3\n            evolution.data.chain.evolves_to[0]?.evolves_to.forEach(i => manyEvols.push(\n              {\n                level: 3, \n                name: i.species.name, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i.species.url.split('/')[i.species.url.split('/').length - 2]}.png`,\n                evolveItem: i.evolution_details[0].held_item?.name,\n                evolveItemUrl: i.evolution_details[0].held_item?.url\n              }\n            ));\n            evolution.data.chain.evolves_to[1]?.evolves_to.forEach(i => manyEvols.push(\n              {\n                level: 3, \n                name: i.species.name, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i.species.url.split('/')[i.species.url.split('/').length - 2]}.png`,\n                evolveItem: i.evolution_details[0].held_item?.name.split('-').join(' '),\n                evolveItemUrl: i.evolution_details[0].held_item?.url\n              }\n            ));\n            // level 1\n            if (firstLevel) {\n              evolves.push({\n                level: 1, \n                name: firstLevel, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolution.data.chain.species.url.split('/')[evolution.data.chain.species.url.split('/').length - 2]}.png`,\n              });\n            }\n            // level 4 (probably will never be used)\n            if (evol3) {\n              evolves.push({\n                level: 4, \n                name: evol3, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolution.data.chain.evolves_to[0]?.evolves_to[0]?.evolves_to[0]?.species.url.split('/')[evolution.data.chain.evolves_to[0]?.evolves_to[0]?.evolves_to[0]?.species.url.split('/').length - 2]}.png`});\n            }\n            // put them all together\n            evolves = [...evolves, ...manyEvols];\n            // get any evolve item images and data\n            evolves.forEach(async i => { \n              let itemData = '';\n              if (i.evolveItemUrl) {\n                itemData = await getAnyUrl(i.evolveItemUrl);\n                i.evolveItemImg = itemData.sprites.default;\n                this.setState({evolutionChain: evolves});\n              }\n            });\n\n            // German name\n            deName = speciesData.names.find(i => i.language.name === 'de').name;\n            jaName = speciesData.names.find(i => i.language.name === 'ja').name;\n            genus = speciesData.genera?.find(i => i.language.name === 'en').genus;\n          }\n          const moves = pokemon.moves.map(i => i.move.name);\n          const types = [];\n          pokemon.types.forEach(async (i) => {\n            const typeData = await getAnyUrl(i.type.url);\n            if (typeData) {\n              types.push({name: i.type.name, url: i.type.url, data: typeData});\n            }\n            this.setState({types});\n          });\n\n          this.setState({\n            isLoading: false,\n            pokemon: pokemon.name,\n            imgFront: pokemon.sprites.front_default,\n            imgBack: pokemon.sprites.back_default,\n            imgFrontShiny: pokemon.sprites.front_shiny,\n            imgBackShiny: pokemon.sprites.back_shiny,\n            imgFrontFemale: pokemon.sprites.front_female,\n            imgBackFemale: pokemon.sprites.back_female,\n            imgFrontShinyFemale: pokemon.sprites.front_shiny_female,\n            imgBackShinyFemale: pokemon.sprites.back_shiny_female,\n            officialArt: pokemon.sprites.other['official-artwork']?.front_default,\n            moves,\n            types,\n            evolutionChain: evolves,\n            searchInput: pokemon.name,\n            deName,\n            jaName,\n            isBaby,\n            isMythical,\n            isLegendary,\n            generation,\n            habitat,\n            growthRate,\n            shape,\n            varieties: varietiesList,\n            genus,\n            mainRegion,\n            description,\n            pokedexId: speciesData.pokedex_numbers[0]?.entry_number,\n            regionSpecies,\n            shapeSpecies,\n            growthRateSpecies\n          });\n        } else if (pokemon && pokemon.includes('404')) {\n          const foundAlternativeName = this.checkPokemonName(this.state.searchInput.toLowerCase().trim());\n          if (foundAlternativeName) {\n            this.handleSearchCall(foundAlternativeName.name);\n          } else {\n            this.setState({\n              pokemon: 'Try your search again, because this pokemon does not exist!',\n              isLoading: false,\n              shinyMode: false,\n              imgFront: '',\n              imgBack: '',\n              imgFrontFemale: '',\n              imgBackFemale: '',\n              imgFrontShiny: '',\n              imgBackShiny: '',\n              imgFrontShinyFemale: '',\n              imgBackShinyFemale: '',\n              officialArt: '',\n              searchInput: '',\n              moves: [],\n              types: [],\n              evolutionChain: [],\n              isBaby: false,\n              isMythical: false,\n              isLegendary: false,\n              deName: '',\n              jaName: '',\n              generation: '',\n              habitat: '',\n              growthRate: '',\n              shape: '',\n              varieties: [],\n              genus: '',\n              mainRegion: '',\n              description: '',\n              pokedexId: '',\n              regionSpecies: [],\n              shapeSpecies: [],\n              growthRateSpecies: [],\n            });\n          }\n        }\n      }\n    }\n\n    handleRandomPokemon = async () => {\n      let randomPokemonData = await getRandomPokemon();\n      if (randomPokemonData && typeof randomPokemonData === 'string' && randomPokemonData.includes('Error')) {\n        this.handleRandomPokemon();\n      }\n      this.setState({ isLoading: true });\n      if (randomPokemonData && randomPokemonData.name) {\n        this.handleSearchCall(randomPokemonData.id);\n      }\n    }\n\n    clearInput = () => this.setState({searchInput: ''})\n\n    render() {\n      const {\n        pokemon, \n        moves,\n        imgFront,\n        imgBack,\n        imgFrontShiny,\n        imgBackShiny,\n        imgFrontFemale,\n        imgBackFemale,\n        imgFrontShinyFemale,\n        imgBackShinyFemale,\n        officialArt,\n        shinyMode,\n        isLoading,\n        types,\n        searchInput,\n        evolutionChain,\n        deName,\n        jaName,\n        isBaby,\n        isMythical,\n        isLegendary,\n        generation,\n        habitat,\n        growthRate,\n        shape,\n        varieties,\n        genus,\n        mainRegion,\n        description,\n        pokedexId,\n        // allPokemon,\n        regionSpecies,\n        shapeSpecies,\n        growthRateSpecies\n      } = this.state;\n      console.log(officialArt);\n      const pokemonName = pokemon && pokemon.length ? pokemon[0].toUpperCase() + pokemon.slice(1, pokemon.length + 1).toLowerCase() : null;\n      const lastLetters = generation ? generation.split('-')[1] : '';\n      const temp = generation?.split('-')[0];\n      const gen = temp ? temp[0].toUpperCase() + temp.slice(1, temp.length + 1).toLowerCase() + ' ' + lastLetters.toUpperCase() : null;\n      const habitatDisplayed = habitat && habitat !== null && typeof habitat === 'string' ? habitat.split('-').join(' ') : habitat ? habitat.name || '' : '';\n      const growthRateDisplayed = growthRate ? growthRate.split('-').join(' ') : '';\n      const shapeDisplayed = shape ? shape.split('-').join(' ') : '';\n      const formatLev1 = description.split('\\f').join(' ').split('POKéMON').join('Pokémon').split(',').join(', ');\n      const formatLev2 = formatLev1.split('\\n').join(' ').split('.').join('. ').split(pokemon.toUpperCase())?.join(pokemonName);\n      return (\n        <div className='display'>\n          <div>\n            <h1>Search any Pokémon!</h1>\n          </div>\n          <div className='search-container'>\n            <input \n              className='search-input' \n              onKeyDown={this.handleOnEnter} \n              onChange={this.handleUpdateInput} \n              value={searchInput}\n              placeholder='Name or Pokédex ID...' />\n            <div className='clear' onClick={this.clearInput}>x</div>\n            <div className='search-button' onClick={this.handleSearchCall}>Search!</div>\n          </div>\n          <div className='search-button' onClick={this.handleRandomPokemon}>Random!</div>\n          {isLoading ? (\n            <div>\n              <img className='loading' src={Pokeball} alt='loading'/>\n            </div>) :\n            (<div className='results-container'>\n              {pokemon ? (\n                <div style={{\n                  backgroundColor: 'azure',\n                  border: '5px solid #fff',\n                  borderRadius: '15px'\n                }}>\n                  <div style={{ color: 'black' }}>\n                    <div className='name-container'>\n                      <h2>{pokemonName}</h2>\n                      {jaName ? <em>Japanese: {jaName}</em> : null}\n                      {deName ? <em>German: {deName}</em> : null}\n                    </div>\n                    {types.length ? <span><ul className='types-list'>\n                      <h3>Type(s):</h3> {types.map(type => <li key={type.name}>{type.name}</li>)}\n                    </ul></span> : null}\n                  </div>\n                  {imgFrontShiny || imgBackShiny ? (\n                    <div \n                      onClick={this.toggleShinyMode}\n                      className={shinyMode ? 'shiny-button' : 'normal-button'}>\n                      Shiny Mode {shinyMode ? 'On' : 'Off'}\n                    </div>) : null}\n                  {shinyMode ? (<div className='picture-box'>\n                    {imgBackShinyFemale || imgFrontShinyFemale ? 'Male:' : null}\n                    <div className='picture-group'>\n                      {imgFrontShiny ?\n                        <img className='pokemon-front' src={imgFrontShiny} alt={pokemon} />\n                        : null}\n                      {imgBackShiny ?\n                        <img className='pokemon-front' src={imgBackShiny} alt={pokemon} />\n                        : null}\n                    </div>\n                    {imgBackShinyFemale || imgFrontShinyFemale ? 'Female:' : null}\n                    <div className='picture-group'>\n                      {imgFrontShinyFemale ?\n                        <img className='pokemon-front' src={imgFrontShinyFemale} alt={pokemon} />\n                        : null}\n                      {imgBackShinyFemale ?\n                        <img className='pokemon-front' src={imgBackShinyFemale} alt={pokemon} />\n                        : null}\n                    </div>\n                  </div>) : (<div className='picture-box'>\n                    {imgBackFemale || imgFrontFemale ? 'Male:' : null}\n                    <div className='picture-group'>\n                      {imgFront ?\n                        <img className='pokemon-front' src={imgFront} alt={pokemon} />\n                        : null}\n                      {imgBack ?\n                        <img className='pokemon-front' src={imgBack} alt={pokemon} />\n                        : null}\n                    </div>\n                    {imgBackFemale || imgFrontFemale ? 'Female:' : null}\n                    <div className='picture-group'>\n                      {imgFrontFemale ?\n                        <img className='pokemon-front' src={imgFrontFemale} alt={pokemon} />\n                        : null}\n                      {imgBackFemale ?\n                        <img className='pokemon-front' src={imgBackFemale} alt={pokemon} />\n                        : null}\n                    </div>\n                  </div>)}\n                  <div style={{color: 'black', marginTop: 'auto'}}>\n                    {isBaby ? 'This pokemon is a baby!' : null}\n                    {isMythical ? 'This pokemon is mythical.' : null}\n                    {isLegendary ? 'This pokemon is legendary.' : null}\n                  </div>\n                </div>) : null}\n              {moves && moves.length ? <div className='moves-list'>\n                <ul>\n                  <h3>{moves.length} Moves:</h3> {moves.map(move => <li key={move}>{move}</li>)}\n                </ul>\n              </div> : null}\n            </div>)}\n          {!isLoading && pokemon && (habitatDisplayed || growthRateDisplayed || shapeDisplayed) ? \n            <div className='data-rows'>\n              <strong>{gen}</strong>\n              {mainRegion ? <p>Main Region: {mainRegion}</p> : null}\n              {habitatDisplayed ? <p>Habitat: {habitatDisplayed}</p> : null}\n              {growthRateDisplayed ? <p>Growth Rate: {growthRateDisplayed}</p> : null}\n              {shapeDisplayed ? <p>Shape: {shapeDisplayed}</p> : null}\n              {genus ? <p>Genus: {genus}</p> : null}\n              {pokedexId && pokedexId < 899 ? <p>Pokédex ID: {pokedexId}</p> : null}\n              {officialArt ? <OfficialArtModal officialArtImg={officialArt} pokemonName={pokemonName} /> : null}\n              {description ? <div className='divider' /> : null}\n              {description ? <p>{formatLev2}</p> : null}\n              {varieties && varieties.length - 1 ? <strong><p className='varieties-header'>Varieties</p></strong> : null}\n              {varieties && varieties.length - 1 ? <div className='varieties-box'>\n                {varieties.map(variety => (\n                  variety.name !== pokemon ?\n                    <div key={variety.name} className='variety-btn' onClick={() => this.handleSearchCall(variety.name)}>{variety.name}</div> : null\n                ))} </div> : null}\n            </div>\n            : null}\n          {!isLoading && evolutionChain && evolutionChain.length ? (\n            <div className='evolve-container'>\n              <h3>Evolution Chain:</h3>\n              <div className='evolves-list'>\n\n                {evolutionChain.find(i => i.level === 1) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={1} />\n                  : null}\n\n                {evolutionChain.find(i => i.level === 2) ? <div className='arrow'>{' > '}</div> : null}\n                \n                {evolutionChain.find(i => i.level === 2) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={2} />\n                  : null}\n\n                {evolutionChain.find(i => i.level === 3) ? <div className='arrow'>{' > '}</div> : null}\n\n                {evolutionChain.find(i => i.level === 3) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={3} />\n                  : null}\n\n                {/* {evolutionChain.find(i => i.level === 4) ? <div className='arrow'>{' > '}</div> : null}\n\n                {evolutionChain.find(i => i.level === 4) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={4} />\n                  : null} */}\n              </div>\n              <div className='explore-box'>\n                {gen || shape || growthRate ? <div className='divider' /> : null}\n                {gen || shape || growthRate ? <strong><p className='varieties-header'>Explore</p></strong> : null}\n                {gen || shape || growthRate ? <div className='varieties-box'>\n                  {gen ?\n                    <Explore \n                      header={gen} \n                      regionSpecies={regionSpecies} \n                      populateInput={this.populateInput}\n                      handleSearchCall={this.handleSearchCall} /> : null}\n                  {shape ?\n                    <Explore \n                      header={shape} \n                      regionSpecies={shapeSpecies} \n                      populateInput={this.populateInput}\n                      handleSearchCall={this.handleSearchCall} /> : null}\n                  {growthRate ?\n                    <Explore \n                      header={`${growthRate} growth rate`} \n                      regionSpecies={growthRateSpecies}\n                      populateInput={this.populateInput}\n                      handleSearchCall={this.handleSearchCall} /> : null}\n                  {types && types.length ?\n                    types.map(type => \n                      <Explore \n                        key={type.name} \n                        header={`${type.name} type`} \n                        regionSpecies={type.data.pokemon.map(i => {return {name: i.pokemon.name, url: i.pokemon.url};}).filter(j => !j.name.includes('totem'))} \n                        populateInput={this.populateInput}\n                        handleSearchCall={this.handleSearchCall} />\n                    ) : null\n                  }\n                </div>\n                  : null}\n              </div>\n            </div>) : null}\n        </div>\n      );\n    }\n}\n\nMain.propTypes = {\n  // color: PropTypes.string\n};\n\nexport default Main;","/* eslint-disable react/react-in-jsx-scope */\nimport './App.css';\nimport Main from './components/main/main.js';\nimport json from '../package.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Main />\n        <h3 className='version-box'>Version: {json.version}</h3>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}