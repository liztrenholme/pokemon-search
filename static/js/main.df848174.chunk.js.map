{"version":3,"sources":["modules/index.js","components/images/Pokeball.png","components/Evolution/index.js","components/main/main.js","App.js","reportWebVitals.js","index.js"],"names":["getPokemonData","pokemonName","a","data","axios","get","toLowerCase","console","log","Object","keys","getAnyUrl","url","getRandomPokemon","randNum","Math","floor","random","Evolution","className","style","display","maxWidth","justifyContent","flexWrap","flexDirection","maxHeight","transform","this","props","evolutionChain","map","form","level","selectedLevel","onClick","handleSearchCall","imageUrl","split","length","name","src","alt","evolveItemImg","evolveItem","Component","Main","state","isLoading","shinyMode","pokemon","imgFront","imgBack","imgFrontShiny","imgBackShiny","searchInput","moves","types","deName","jaName","isBaby","isMythical","isLegendary","generation","habitat","growthRate","shape","varieties","allPokemon","genus","mainRegion","description","handleUpdateInput","e","setState","target","value","handleOnEnter","key","toggleShinyMode","checkPokemonName","find","i","includes","newPokemon","evolves","varietiesList","species","speciesData","is_baby","is_mythical","is_legendary","mainRegionData","main_region","growth_rate","genera","language","flavor_text_entries","flavor_text","forEach","push","evolution","evolution_chain","firstLevel","chain","evol3","evolves_to","manyEvols","evolution_details","held_item","join","evolveItemUrl","itemData","sprites","default","names","move","type","front_default","back_default","front_shiny","back_shiny","foundAlternativeName","trim","handleRandomPokemon","randomPokemonData","id","results","toUpperCase","slice","lastLetters","temp","gen","habitatDisplayed","growthRateDisplayed","shapeDisplayed","formatLev2","onKeyDown","onChange","Pokeball","backgroundColor","border","borderRadius","color","marginTop","variety","App","json","version","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df848174.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport axios from 'axios';\n\nexport const getPokemonData = async (pokemonName) => {\n  let data = {};\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/pokemon/${typeof pokemonName === 'string' ? pokemonName.toLowerCase() : pokemonName}`);\n    \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getAnyUrl = async (url) => {\n  let data = {};\n  try {\n    data = await axios.get(url);\n    \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getEvolutionData = async (pokemonId) => {\n  let data = {};\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/evolution-chain/${pokemonId}/`);\n    \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getPokemonSpeciesData = async (pokemonId) => {\n  let data = {};\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${pokemonId}`);\n        \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getRandomPokemon = async () => {\n  let data = {};\n  const randNum = Math.floor(Math.random() * 898);\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${randNum}`);\n        \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};","export default __webpack_public_path__ + \"static/media/Pokeball.32cfee51.png\";","import React, { Component } from 'react';\nimport './evolution.css';\nimport PropTypes from 'prop-types';\n\nclass Evolution extends Component {\n  render() {\n    return (\n      <div className='level-two'\n        style={{\n          display: 'flex',\n          maxWidth: '5em',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n          flexDirection: 'column',\n          maxHeight: '30em',\n          transform: 'scale(0.75, 0.75)'\n        }}>\n        {this.props.evolutionChain.map((form) => form.level === this.props.selectedLevel ? <div onClick={() => this.props.handleSearchCall(form.imageUrl?.split('/')[form.imageUrl.split('/').length - 1].split('.png')[0] || form.name)} \n          className='evolve-item' \n          key={form.name}>\n          <div className='images-box'>\n            <img className='evolImg' src={form.imageUrl} alt={form.name} />\n            {form.evolveItemImg ? <img className='held-item' src={form.evolveItemImg} alt={form.evolveItem} /> : null}\n          </div>\n          {form.name}\n\n          {form.evolveItem ? <span>with {form.evolveItem}</span> : null}\n        </div> : null)}\n      </div>\n    );\n  }\n}\n\nEvolution.propTypes = {\n  evolutionChain: PropTypes.array,\n  handleSearchCall: PropTypes.func,\n  selectedLevel: PropTypes.number\n};\n\nexport default Evolution;","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport './main.css';\n// import PropTypes from 'prop-types';\nimport 'whatwg-fetch';\nimport {\n  getPokemonData,\n  // getPokemonSpeciesData,\n  getRandomPokemon,\n  //  getPokemonForms\n  getAnyUrl\n} from '../../modules';\nimport Pokeball from '../images/Pokeball.png';\nimport Evolution from '../Evolution';\nimport axios from 'axios';\n\nclass Main extends Component {\n    state = {\n      isLoading: false,\n      shinyMode: false,\n      pokemon: '',\n      imgFront: '',\n      imgBack: '',\n      imgFrontShiny: '',\n      imgBackShiny: '',\n      searchInput: '',\n      moves: [],\n      types: [],\n      evolutionChain: [],\n      deName: '',\n      jaName: '',\n      isBaby: false,\n      isMythical: false,\n      isLegendary: false,\n      generation: '',\n      habitat: '',\n      growthRate: '',\n      shape: '',\n      varieties: [],\n      allPokemon: [],\n      genus: '',\n      mainRegion: '',\n      description: ''\n    }\n\n    async componentDidMount() {\n      const allPokemon = await getAnyUrl('https://pokeapi.co/api/v2/pokemon/?limit=1200');\n      if (allPokemon && allPokemon.results) {\n        this.setState({allPokemon: allPokemon.results});\n      }\n    }\n\n    handleUpdateInput = (e) => {\n      this.setState({ searchInput: e.target.value });\n    }\n\n    handleOnEnter = (e) => {\n      if (e.key === 'Enter') {\n        this.handleSearchCall();\n      }\n    }\n\n    toggleShinyMode = () => this.state.shinyMode ? this.setState({shinyMode: false}) : this.setState({shinyMode: true})\n\n    checkPokemonName = (pokemonName) => {\n      return this.state.allPokemon.find(i => i.name.includes(pokemonName));\n    }\n    \n    handleSearchCall = async (newPokemon) => {\n      if ((newPokemon && typeof newPokemon === 'string') || (newPokemon && typeof newPokemon === 'number') || this.state.searchInput) {\n        this.setState({ isLoading: true });\n        const pokemon = await getPokemonData((typeof newPokemon === 'string') || (typeof newPokemon === 'number') ? newPokemon : this.state.searchInput);\n        let evolves = [];\n        let deName = '';\n        let jaName = '';\n        let isBaby = false;\n        let isMythical = false;\n        let isLegendary = false;\n        let generation = '';\n        let habitat = '';\n        let growthRate = '';\n        let shape = '';\n        let genus = '';\n        const varietiesList = [];\n        let mainRegion = '';\n        let description = '';\n        if (pokemon && pokemon.name) {\n        // const pokemonId = pokemon.id;\n          const speciesData = await getAnyUrl(pokemon.species.url); // getPokemonSpeciesData(pokemon.species.url || pokemonId);\n          isBaby = speciesData.is_baby;\n          isMythical = speciesData.is_mythical;\n          isLegendary = speciesData.is_legendary;\n          generation = speciesData.generation?.name;\n          const mainRegionData = await getAnyUrl(speciesData.generation?.url);\n          mainRegion = mainRegionData?.main_region?.name;\n          habitat = speciesData.habitat;\n          growthRate = speciesData.growth_rate?.name;\n          shape = speciesData.shape?.name;\n\n          speciesData.genera?.find(i => i.language.name === 'en').genus;\n          description = speciesData.flavor_text_entries?.find(i => i.language.name === 'en').flavor_text;\n          const varieties = speciesData.varieties;\n        \n          if (varieties && varieties.length) {\n            varieties.forEach(form => !form.pokemon?.name.includes('starter') && !form.pokemon?.name.includes('world-cap') \n              ? varietiesList.push({name: form.pokemon?.name, url: form.pokemon?.url}) : null);\n          }\n          let evolution = null;\n          if (speciesData && speciesData.evolution_chain) {      \n            evolution = await axios.get(speciesData.evolution_chain.url);\n          }\n          if (evolution && evolution.data) {\n            const firstLevel = evolution.data.chain.species.name;\n            const evol3 = evolution.data.chain.evolves_to[0]?.evolves_to[0]?.evolves_to[0]?.species.name;\n\n            const manyEvols = [];\n            // level 2\n            evolution.data.chain.evolves_to.forEach(i => manyEvols.push(\n              {\n                level: 2, \n                name: i.species.name, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i.species.url.split('/')[i.species.url.split('/').length - 2]}.png`,\n                evolveItem: i.evolution_details[0].held_item?.name.split('-').join(' '),\n                evolveItemUrl: i.evolution_details[0].held_item?.url\n              }\n            ));\n            // level 3\n            evolution.data.chain.evolves_to[0]?.evolves_to.forEach(i => manyEvols.push(\n              {\n                level: 3, \n                name: i.species.name, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i.species.url.split('/')[i.species.url.split('/').length - 2]}.png`,\n                evolveItem: i.evolution_details[0].held_item?.name,\n                evolveItemUrl: i.evolution_details[0].held_item?.url\n              }\n            ));\n            evolution.data.chain.evolves_to[1]?.evolves_to.forEach(i => manyEvols.push(\n              {\n                level: 3, \n                name: i.species.name, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i.species.url.split('/')[i.species.url.split('/').length - 2]}.png`,\n                evolveItem: i.evolution_details[0].held_item?.name.split('-').join(' '),\n                evolveItemUrl: i.evolution_details[0].held_item?.url\n              }\n            ));\n            // level 1\n            if (firstLevel) {\n              evolves.push({\n                level: 1, \n                name: firstLevel, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolution.data.chain.species.url.split('/')[evolution.data.chain.species.url.split('/').length - 2]}.png`,\n              });\n            }\n            // level 4 (probably will never be used)\n            if (evol3) {\n              evolves.push({\n                level: 4, \n                name: evol3, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolution.data.chain.evolves_to[0]?.evolves_to[0]?.evolves_to[0]?.species.url.split('/')[evolution.data.chain.evolves_to[0]?.evolves_to[0]?.evolves_to[0]?.species.url.split('/').length - 2]}.png`});\n            }\n            // put them all together\n            evolves = [...evolves, ...manyEvols];\n            // get any evolve item images and data\n            evolves.forEach(async i => { \n              let itemData = '';\n              if (i.evolveItemUrl) {\n                itemData = await getAnyUrl(i.evolveItemUrl);\n                console.log(itemData);\n                i.evolveItemImg = itemData.sprites.default;\n                this.setState({evolutionChain: evolves});\n              }\n            });\n\n            // German name\n            deName = speciesData.names.find(i => i.language.name === 'de').name;\n            jaName = speciesData.names.find(i => i.language.name === 'ja').name;\n            genus = speciesData.genera?.find(i => i.language.name === 'en').genus;\n          }\n          const moves = pokemon.moves.map(i => i.move.name);\n          const types = pokemon.types.map(i => i.type.name);\n          this.setState({\n            isLoading: false,\n            pokemon: pokemon.name,\n            imgFront: pokemon.sprites.front_default,\n            imgBack: pokemon.sprites.back_default,\n            imgFrontShiny: pokemon.sprites.front_shiny,\n            imgBackShiny: pokemon.sprites.back_shiny,\n            moves,\n            types,\n            evolutionChain: evolves,\n            searchInput: pokemon.name,\n            deName,\n            jaName,\n            isBaby,\n            isMythical,\n            isLegendary,\n            generation,\n            habitat,\n            growthRate,\n            shape,\n            varieties: varietiesList,\n            genus,\n            mainRegion,\n            description\n          });\n        } else if (pokemon && pokemon.includes('404')) {\n          const foundAlternativeName = this.checkPokemonName(this.state.searchInput.toLowerCase().trim());\n          if (foundAlternativeName) {\n            this.handleSearchCall(foundAlternativeName.name);\n          } else {\n            this.setState({\n              pokemon: 'Try your search again, because this pokemon does not exist!',\n              isLoading: false,\n              shinyMode: false,\n              imgFront: '',\n              imgBack: '',\n              imgFrontShiny: '',\n              imgBackShiny: '',\n              searchInput: '',\n              moves: [],\n              types: [],\n              evolutionChain: [],\n              isBaby: false,\n              isMythical: false,\n              isLegendary: false,\n              deName: '',\n              jaName: '',\n              generation: '',\n              habitat: '',\n              growthRate: '',\n              shape: '',\n              varieties: [],\n              genus: '',\n              mainRegion: '',\n              description: ''\n            });\n          }\n        }\n      }\n    }\n\n    handleRandomPokemon = async () => {\n      let randomPokemonData = await getRandomPokemon();\n      if (randomPokemonData && typeof randomPokemonData === 'string' && randomPokemonData.includes('Error')) {\n        this.handleRandomPokemon();\n      }\n      this.setState({ isLoading: true });\n      if (randomPokemonData && randomPokemonData.name) {\n        this.handleSearchCall(randomPokemonData.id);\n      }\n    }\n\n    render() {\n      const {\n        pokemon, \n        moves,\n        imgFront,\n        imgBack,\n        imgFrontShiny,\n        imgBackShiny,\n        shinyMode,\n        isLoading,\n        types,\n        searchInput,\n        evolutionChain,\n        deName,\n        jaName,\n        isBaby,\n        isMythical,\n        isLegendary,\n        generation,\n        habitat,\n        growthRate,\n        shape,\n        varieties,\n        genus,\n        mainRegion,\n        description\n      } = this.state;\n      const pokemonName = pokemon && pokemon.length ? pokemon[0].toUpperCase() + pokemon.slice(1, pokemon.length + 1).toLowerCase() : null;\n      const lastLetters = generation ? generation.split('-')[1] : '';\n      const temp = generation?.split('-')[0];\n      const gen = temp ? temp[0].toUpperCase() + temp.slice(1, temp.length + 1).toLowerCase() + ' ' + lastLetters.toUpperCase() : null;\n      const habitatDisplayed = habitat && habitat !== null && typeof habitat === 'string' ? habitat.split('-').join(' ') : habitat ? habitat.name || '' : '';\n      const growthRateDisplayed = growthRate ? growthRate.split('-').join(' ') : '';\n      const shapeDisplayed = shape ? shape.split('-').join(' ') : '';\n      const formatLev1 = description.split('\\f').join(' ').split('POKéMON').join('Pokémon').split(',').join(', ');\n      const formatLev2 = formatLev1.split('\\n').join(' ').split('.').join('. ').split(pokemon.toUpperCase())?.join(pokemonName);\n      return (\n        <div className='display'>\n          <div>\n            <h1>Search any Pokémon!</h1>\n          </div>\n          <div className='search-container'>\n            <input className='search-input' onKeyDown={this.handleOnEnter} onChange={this.handleUpdateInput} value={searchInput} />\n            <div className='search-button' onClick={this.handleSearchCall}>Search!</div>\n          </div>\n          <div className='search-button' onClick={this.handleRandomPokemon}>Random!</div>\n          {isLoading ? (\n            <div>\n              <img className='loading' src={Pokeball} alt='loading'/>\n            </div>) :\n            (<div className='results-container'>\n              {pokemon ? (\n                <div style={{\n                  backgroundColor: 'azure',\n                  border: '5px solid #fff',\n                  borderRadius: '15px'\n                }}>\n                  <div style={{ color: 'black' }}>\n                    <div className='name-container'>\n                      <h2>{pokemonName}</h2>\n                      {jaName ? <em>Japanese: {jaName}</em> : null}\n                      {deName ? <em>German: {deName}</em> : null}\n                    </div>\n                    {types.length ? <span><ul className='types-list'>\n                      <h3>Type(s):</h3> {types.map(type => <li key={type}>{type}</li>)}\n                    </ul></span> : null}\n                  </div>\n                  {imgFrontShiny || imgBackShiny ? (\n                    <div \n                      onClick={this.toggleShinyMode} \n                      className={shinyMode ? 'shiny-button' : 'normal-button'}>\n                      Shiny Mode {shinyMode ? 'On' : 'Off'}\n                    </div>) : null}\n                  {shinyMode ? (<div>\n                    {imgFrontShiny ?\n                      <img className='pokemon-front' src={imgFrontShiny} alt={pokemon} />\n                      : null}\n                    {imgBackShiny ?\n                      <img className='pokemon-front' src={imgBackShiny} alt={pokemon} />\n                      : null}\n                  </div>) : (<div>\n                    {imgFront ?\n                      <img className='pokemon-front' src={imgFront} alt={pokemon} />\n                      : null}\n                    {imgBack ?\n                      <img className='pokemon-front' src={imgBack} alt={pokemon} />\n                      : null}\n                  </div>)}\n                  <div style={{color: 'black', marginTop: 'auto'}}>\n                    {isBaby ? 'This pokemon is a baby!' : null}\n                    {isMythical ? 'This pokemon is mythical.' : null}\n                    {isLegendary ? 'This pokemon is legendary.' : null}\n                  </div>\n                </div>) : null}\n              {moves && moves.length ? <div className='moves-list'>\n                <ul>\n                  <h3>{moves.length} Moves:</h3> {moves.map(move => <li key={move}>{move}</li>)}\n                </ul>\n              </div> : null}\n            </div>)}\n          {!isLoading && pokemon && (habitatDisplayed || growthRateDisplayed || shapeDisplayed) ? \n            <div className='data-rows'>\n              <strong>{gen}</strong>\n              {mainRegion ? <p>Main Region: {mainRegion}</p> : null}\n              {habitatDisplayed ? <p>Habitat: {habitatDisplayed}</p> : null}\n              {growthRateDisplayed ? <p>Growth Rate: {growthRateDisplayed}</p> : null}\n              {shapeDisplayed ? <p>Shape: {shapeDisplayed}</p> : null}\n              {genus ? <p>Genus: {genus}</p> : null}\n              {description ? <div className='divider' /> : null}\n              {description ? <p>{formatLev2}</p> : null}\n              {varieties && varieties.length - 1 ? <div className='varieties-box'>\n                <strong>Varieties</strong><div />{varieties.map(variety => (\n                  variety.name !== pokemon ?\n                    <div key={variety.name} className='variety-btn' onClick={() => this.handleSearchCall(variety.name)}>{variety.name}</div> : null\n                ))} </div> : null}\n            </div>\n            : null}\n          {!isLoading && evolutionChain && evolutionChain.length ? (\n            <div className='evolve-container'>\n              <h3>Evolution Chain:</h3>\n              <div className='evolves-list'>\n\n                {evolutionChain.find(i => i.level === 1) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={1} />\n                  : null}\n\n                {evolutionChain.find(i => i.level === 2) ? <div className='arrow'>{' -> '}</div> : null}\n                \n                {evolutionChain.find(i => i.level === 2) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={2} />\n                  : null}\n\n                {evolutionChain.find(i => i.level === 3) ? <div className='arrow'>{' -> '}</div> : null}\n\n                {evolutionChain.find(i => i.level === 3) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={3} />\n                  : null}\n\n                {evolutionChain.find(i => i.level === 4) ? <div className='arrow'>{' -> '}</div> : null}\n\n                {evolutionChain.find(i => i.level === 4) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={4} />\n                  : null}\n              </div>\n            </div>) : null}\n        </div>\n      );\n    }\n}\n\nMain.propTypes = {\n  // color: PropTypes.string\n};\n\nexport default Main;","/* eslint-disable react/react-in-jsx-scope */\nimport './App.css';\nimport Main from './components/main/main.js';\nimport json from '../package.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Main />\n        <h3 className='version-box'>Version: {json.version}</h3>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}