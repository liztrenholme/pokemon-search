{"version":3,"sources":["modules/index.js","components/images/Pokeball.png","components/Evolution/index.js","components/Explore/index.js","components/OfficialArtModal/index.js","components/Items/individualItem.js","components/Items/index.js","components/main/main.js","App.js","reportWebVitals.js","index.js"],"names":["getPokemonData","pokemonName","a","data","axios","get","toLowerCase","console","log","Object","keys","getAnyUrl","url","getRandomPokemon","randNum","Math","floor","random","getItemsData","Evolution","className","style","display","maxWidth","justifyContent","flexWrap","flexDirection","maxHeight","transform","this","props","evolutionChain","map","form","level","selectedLevel","onClick","handleSearchCall","imageUrl","split","length","name","evolveItemImg","src","alt","evolveItem","Component","Explore","state","displayed","handleFillInputAndCallSearch","input","populateInput","handleDisplayList","setState","header","regionSpecies","i","OfficialArtModal","handleDisplayArt","officialArtImg","IndividualItem","item","handleSelectItem","includes","join","Items","selectedItem","allItems","handleFetchNav","direction","newSet","results","itemUrl","itemData","width","sprites","default","attributes","category","held_by_pokemon","j","pokemon","effect_entries","find","language","short_effect","previous","next","Main","isLoading","shinyMode","imgFront","imgBack","imgFrontFemale","imgBackFemale","imgFrontShiny","imgBackShiny","imgFrontShinyFemale","imgBackShinyFemale","searchInput","moves","types","deName","jaName","isBaby","isMythical","isLegendary","generation","habitat","growthRate","shape","varieties","allPokemon","genus","mainRegion","description","pokedexId","shapeSpecies","growthRateSpecies","heldItems","handleUpdateInput","e","target","value","handleOnEnter","key","toggleShinyMode","checkPokemonName","newPokemon","evolves","varietiesList","habitatSpecies","held_items","imgUrl","species","speciesData","is_baby","is_mythical","is_legendary","mainRegionData","main_region","pokemon_species","shapeSpeciesData","growth_rate","growthRateSpeciesData","habitatSpeciesData","genera","flavor_text_entries","flavor_text","forEach","push","evolution","evolution_chain","firstLevel","chain","evol3","evolves_to","manyEvols","evolution_details","held_item","evolveItemUrl","names","move","type","typeData","front_default","back_default","front_shiny","back_shiny","front_female","back_female","front_shiny_female","back_shiny_female","officialArt","other","pokedex_numbers","entry_number","foundAlternativeName","trim","handleRandomPokemon","randomPokemonData","id","clearInput","toUpperCase","slice","lastLetters","temp","gen","habitatDisplayed","growthRateDisplayed","shapeDisplayed","formatLev2","onKeyDown","onChange","placeholder","Pokeball","backgroundColor","border","borderRadius","color","marginTop","variety","filter","App","json","version","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07fec213.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport axios from 'axios';\n\nexport const getPokemonData = async (pokemonName) => {\n  let data = {};\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/pokemon/${typeof pokemonName === 'string' ? pokemonName.toLowerCase() : pokemonName}`);\n    \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getAnyUrl = async (url) => {\n  let data = {};\n  try {\n    data = await axios.get(url);\n    \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getEvolutionData = async (pokemonId) => {\n  let data = {};\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/evolution-chain/${pokemonId}/`);\n    \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getPokemonSpeciesData = async (pokemonId) => {\n  let data = {};\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${pokemonId}`);\n        \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getRandomPokemon = async () => {\n  let data = {};\n  const randNum = Math.floor(Math.random() * 898);\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${randNum}`);\n        \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getItemsData = async () => {\n  let data = {};\n  try {\n    data = await axios.get('https://pokeapi.co/api/v2/item/');\n    \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};","export default __webpack_public_path__ + \"static/media/Pokeball.32cfee51.png\";","import './evolution.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Evolution extends Component {\n  render() {\n    return (\n      <div className='level-two'\n        style={{\n          display: 'flex',\n          maxWidth: '6em',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n          flexDirection: 'column',\n          maxHeight: '30em',\n          transform: 'scale(0.75, 0.75)'\n        }}>\n        {this.props.evolutionChain.map((form) => form.level === this.props.selectedLevel ? <div onClick={() => this.props.handleSearchCall(form.imageUrl?.split('/')[form.imageUrl.split('/').length - 1].split('.png')[0] || form.name)} \n          className='evolve-item' \n          key={form.name}>\n          <div className='images-box'>\n            {form.evolveItemImg ? <img className='held-item' src={form.evolveItemImg} alt={form.evolveItem} /> : null}\n            <img className='evolImg' src={form.imageUrl} alt={form.name} />\n          </div>\n          {form.evolveItem ? <span>+ {form.evolveItem}</span> : null}\n          {form.name}\n\n        </div> : null)}\n      </div>\n    );\n  }\n}\n\nEvolution.propTypes = {\n  evolutionChain: PropTypes.array,\n  handleSearchCall: PropTypes.func,\n  selectedLevel: PropTypes.number\n};\n\nexport default Evolution;","/* eslint-disable no-console */\nimport './explore.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Explore extends Component {\n    state = {\n      displayed: false\n    }\n\n    handleFillInputAndCallSearch = (input) => {\n      this.props.populateInput(input);\n      this.props.handleSearchCall(input);\n    }\n\n    handleDisplayList = () => this.state.displayed ? this.setState({displayed: false}) : this.setState({displayed: true})\n    render() {\n      const {header, regionSpecies} = this.props;\n      return (\n        <div className='explore-container'>\n          <div className='variety-btn' onClick={this.handleDisplayList}>Show all {header} species</div>\n          {this.state.displayed\n            ? <div className='explore-species-modal'>\n              <div className='fixed-header'>\n                <p className='header-title'>{this.props.header} ({regionSpecies.length})</p>\n                <div className='x-box' onClick={this.handleDisplayList}>x</div>\n              </div>\n              {regionSpecies && regionSpecies.length ? regionSpecies.map(i => <p className='species-result' onClick={() => this.handleFillInputAndCallSearch(i.name)} key={i.name}>\n                <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i?.url?.split('/')[6]}.png`} alt={i.name} />\n                {i.name}\n              </p>\n              ) : null}\n            </div>\n            : null}\n        </div>\n      );\n    }\n}\n\nExplore.propTypes = {\n  header: PropTypes.string,\n  allPokemon: PropTypes.array,\n  regionSpecies: PropTypes.array,\n  handleSearchCall: PropTypes.func,\n  populateInput: PropTypes.func\n};\n\nexport default Explore;","/* eslint-disable no-console */\nimport './officialArt.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass OfficialArtModal extends Component {\n    state = {\n      displayed: false\n    }\n\n    handleDisplayArt = () => this.state.displayed ? this.setState({displayed: false}) : this.setState({displayed: true})\n    render() {\n      const {pokemonName, officialArtImg} = this.props;\n      return (\n        <div className='art-container'>\n          <div className='variety-btn' onClick={this.handleDisplayArt}>Official Artwork</div>\n          {this.state.displayed\n            ? <div className='art-modal'>\n              <div className='fixed-header'>\n                <p className='header-title'>{pokemonName}</p>\n                <div className='x-box' onClick={this.handleDisplayArt}>x</div>\n              </div>\n              <img className='art-image' src={officialArtImg} alt={pokemonName} />\n            </div>\n            : null}\n        </div>\n      );\n    }\n}\n\nOfficialArtModal.propTypes = {\n  officialArtImg: PropTypes.string,\n  pokemonName: PropTypes.string,\n};\n\nexport default OfficialArtModal;","/* eslint-disable no-console */\nimport './items.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass IndividualItem extends Component {\n  render() {\n    const {item} = this.props;\n    return (\n      <div className='item' onClick={() => this.props.handleSelectItem(item.url)}>\n        <img src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/${item.name.includes('tm') ? 'tm-normal' : item.name}.png`}\n          alt={item.name} />\n        {item.name.split('-').join(' ')}\n      </div>\n    );\n  }\n}\n\nIndividualItem.propTypes = {\n  item: PropTypes.object,\n  handleSelectItem: PropTypes.func\n};\n\nexport default IndividualItem;","/* eslint-disable no-console */\nimport './items.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport IndividualItem from './individualItem';\n\nclass Items extends Component {\n    state = {\n      displayed: false,\n      selectedItem: {},\n      allItems: {}\n    }\n\n    componentDidMount() {\n      const {allItems} = this.props;\n      if (allItems && allItems.results && allItems.results.length) {\n        this.setState({allItems});\n      }\n    }\n\n    handleFetchNav = async (direction) => {\n      const newSet = await this.props.getAnyUrl(direction);\n      if (newSet && newSet.results) {\n        this.setState({allItems: newSet});\n      }\n    }\n\n    handleSelectItem = async (itemUrl) => {\n      const itemData = await this.props.getAnyUrl(itemUrl);\n      if (itemData) {\n        this.setState({selectedItem: itemData});\n      }\n    }\n\n    handleDisplayList = () => this.state.displayed ? this.setState({displayed: false}) : this.setState({displayed: true})\n    render() {\n      const {allItems, selectedItem} = this.state;\n      return (\n        <div className='items-container'>\n          <div className='variety-btn' onClick={this.handleDisplayList}>Show all Items</div>\n          {this.state.displayed ? <div className='items-modal'>\n            <div className='fixed-div'>\n              <div className='fixed-items-header'>\n                <p className='header-title'>Items</p>\n                <div className='x-box' onClick={this.handleDisplayList}>x</div>\n              </div>\n              {selectedItem && selectedItem.name ? (\n                <div className='selected-item'>\n                  <div className='selected-item-header'>\n                    <img style={{width: '80px'}} src={selectedItem.sprites.default} alt={selectedItem.name} />\n                    {selectedItem.name.split('-').join(' ')}\n                  </div>\n                  <div className='item-row'>\nAttributes: {selectedItem.attributes.map(i => <span key={i.name}>{i.name}   </span>)}\n                  </div>\n                  <div className='item-row'>\nCategory: {selectedItem.category.name}\n                  </div>\n                  {selectedItem.held_by_pokemon && selectedItem.held_by_pokemon.length ? <div className='item-row'>\nHeld by Pokémon: {selectedItem.held_by_pokemon.map(j => <span key={j.pokemon.name}>{j.pokemon.name}  </span>)}\n                  </div> : null}\n                  {/* {selectedItem.baby_trigger_for ? <div className='item-row'>\nBaby Trigger for: {selectedItem.baby_trigger_for}\n                  </div> : null} */}\n                  <div className='item-row'>\nDescription: {selectedItem.effect_entries.find(i => i.language.name === 'en').short_effect}\n                  </div>\n                </div>) : null}\n            </div>\n            {allItems && allItems.results && allItems.results.length ? \n              allItems.results.map(i => \n                <IndividualItem\n                  handleSelectItem={this.handleSelectItem}\n                  key={Math.random()}\n                  item={i} />) : null}\n            <div className='nav-box'>\n              <p onClick={allItems.previous ? () => this.handleFetchNav(allItems.previous) : null} \n                className={`nav-previous ${allItems.previous ? 'active' : 'disabled'}`}>Previous</p>\n              <p onClick={allItems.next ? () => this.handleFetchNav(allItems.next) : null} \n                className={`nav-next ${allItems.next ? 'active' : 'disabled'}`}>Next</p>\n            </div>\n          </div> : null}\n        </div>\n      );\n    }\n}\n\nItems.propTypes = {\n  header: PropTypes.string,\n  allItems: PropTypes.array,\n  getAnyUrl: PropTypes.func\n};\n\nexport default Items;","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport './main.css';\n// import PropTypes from 'prop-types';\nimport 'whatwg-fetch';\nimport {\n  getPokemonData,\n  getRandomPokemon,\n  getAnyUrl,\n  getItemsData\n} from '../../modules';\nimport Pokeball from '../images/Pokeball.png';\nimport Evolution from '../Evolution';\nimport Explore from '../Explore';\nimport OfficialArtModal from '../OfficialArtModal';\nimport Items from '../Items';\nimport axios from 'axios';\n\nclass Main extends Component {\n    state = {\n      isLoading: false,\n      shinyMode: false,\n      pokemon: '',\n      imgFront: '',\n      imgBack: '',\n      imgFrontFemale: '',\n      imgBackFemale: '',\n      imgFrontShiny: '',\n      imgBackShiny: '',\n      imgFrontShinyFemale: '',\n      imgBackShinyFemale: '',\n      searchInput: '',\n      moves: [],\n      types: [],\n      evolutionChain: [],\n      deName: '',\n      jaName: '',\n      isBaby: false,\n      isMythical: false,\n      isLegendary: false,\n      generation: '',\n      habitat: '',\n      growthRate: '',\n      shape: '',\n      varieties: [],\n      allPokemon: [],\n      genus: '',\n      mainRegion: '',\n      description: '',\n      pokedexId: '',\n      regionSpecies: '',\n      shapeSpecies: '',\n      growthRateSpecies: '',\n      allItems: {},\n      heldItems: []\n    }\n\n    async componentDidMount() {\n      const allPokemon = await getAnyUrl('https://pokeapi.co/api/v2/pokemon/?limit=1200');\n      if (allPokemon && allPokemon.results) {\n        this.setState({allPokemon: allPokemon.results});\n      }\n    }\n\n    handleUpdateInput = (e) => {\n      this.setState({ searchInput: e.target.value });\n    }\n\n    handleOnEnter = (e) => {\n      if (e.key === 'Enter') {\n        this.handleSearchCall();\n      }\n    }\n\n    toggleShinyMode = () => this.state.shinyMode ? this.setState({shinyMode: false}) : this.setState({shinyMode: true})\n\n    checkPokemonName = (pokemonName) => {\n      return this.state.allPokemon.find(i => i.name.includes(pokemonName));\n    }\n\n    populateInput = (input) => this.setState({searchInput: input})\n    \n    handleSearchCall = async (newPokemon) => {\n      if ((newPokemon && typeof newPokemon === 'string') || (newPokemon && typeof newPokemon === 'number') || this.state.searchInput) {\n        this.setState({ isLoading: true });\n        const pokemon = await getPokemonData((typeof newPokemon === 'string') || (typeof newPokemon === 'number') ? newPokemon : this.state.searchInput);\n        const allItems = await getItemsData();\n        let evolves = [];\n        let deName = '';\n        let jaName = '';\n        let isBaby = false;\n        let isMythical = false;\n        let isLegendary = false;\n        let generation = '';\n        let habitat = '';\n        let growthRate = '';\n        let shape = '';\n        let genus = '';\n        const varietiesList = [];\n        let mainRegion = '';\n        let description = '';\n        let regionSpecies = '';\n        let shapeSpecies = '';\n        let growthRateSpecies = '';\n        let habitatSpecies = '';\n        let heldItems = [];\n        if (pokemon && pokemon.name) {\n          heldItems = pokemon.held_items.map(i => {\n            return ({name: i.item.name.split('-').join(' '), imgUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/${i.item.name}.png`});\n          });\n          const speciesData = await getAnyUrl(pokemon.species.url); // getPokemonSpeciesData(pokemon.species.url || pokemonId);\n          isBaby = speciesData.is_baby;\n          isMythical = speciesData.is_mythical;\n          isLegendary = speciesData.is_legendary;\n          generation = speciesData.generation?.name;\n          const mainRegionData = await getAnyUrl(speciesData.generation?.url);\n          mainRegion = mainRegionData?.main_region?.name;\n          regionSpecies = mainRegionData?.pokemon_species;\n          const shapeSpeciesData = await getAnyUrl(speciesData?.shape?.url);\n          if (shapeSpeciesData.pokemon_species) {\n            shapeSpecies = shapeSpeciesData.pokemon_species;\n          }\n          const growthRateSpeciesData = await getAnyUrl(speciesData?.growth_rate?.url);\n          if (growthRateSpeciesData.pokemon_species) {\n            growthRateSpecies = growthRateSpeciesData.pokemon_species;\n          }\n          const habitatSpeciesData = await getAnyUrl(speciesData?.habitat?.url);\n          if (habitatSpeciesData.pokemon_species) {\n            habitatSpecies = habitatSpeciesData.pokemon_species;\n          }\n          habitat = speciesData.habitat;\n          growthRate = speciesData.growth_rate?.name;\n          shape = speciesData.shape?.name;\n\n          speciesData.genera?.find(i => i.language.name === 'en').genus;\n          description = speciesData.flavor_text_entries?.find(i => i.language.name === 'en').flavor_text;\n          const varieties = speciesData.varieties;\n        \n          if (varieties && varieties.length) {\n            varieties.forEach(form => !form.pokemon?.name.includes('world-cap') \n              ? varietiesList.push({name: form.pokemon?.name, url: form.pokemon?.url}) : null);\n          }\n          let evolution = null;\n          if (speciesData && speciesData.evolution_chain) {      \n            evolution = await axios.get(speciesData.evolution_chain.url);\n          }\n          if (evolution && evolution.data) {\n            const firstLevel = evolution.data.chain.species.name;\n            const evol3 = evolution.data.chain.evolves_to[0]?.evolves_to[0]?.evolves_to[0]?.species.name;\n\n            const manyEvols = [];\n            // level 2\n            evolution.data.chain.evolves_to.forEach(i => manyEvols.push(\n              {\n                level: 2, \n                name: i.species.name, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i.species.url.split('/')[i.species.url.split('/').length - 2]}.png`,\n                evolveItem: i.evolution_details[0].held_item?.name.split('-').join(' '),\n                evolveItemUrl: i.evolution_details[0].held_item?.url\n              }\n            ));\n            // level 3\n            evolution.data.chain.evolves_to[0]?.evolves_to.forEach(i => manyEvols.push(\n              {\n                level: 3, \n                name: i.species.name, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i.species.url.split('/')[i.species.url.split('/').length - 2]}.png`,\n                evolveItem: i.evolution_details[0].held_item?.name,\n                evolveItemUrl: i.evolution_details[0].held_item?.url\n              }\n            ));\n            evolution.data.chain.evolves_to[1]?.evolves_to.forEach(i => manyEvols.push(\n              {\n                level: 3, \n                name: i.species.name, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i.species.url.split('/')[i.species.url.split('/').length - 2]}.png`,\n                evolveItem: i.evolution_details[0].held_item?.name.split('-').join(' '),\n                evolveItemUrl: i.evolution_details[0].held_item?.url\n              }\n            ));\n            // level 1\n            if (firstLevel) {\n              evolves.push({\n                level: 1, \n                name: firstLevel, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolution.data.chain.species.url.split('/')[evolution.data.chain.species.url.split('/').length - 2]}.png`,\n              });\n            }\n            // level 4 (probably will never be used)\n            if (evol3) {\n              evolves.push({\n                level: 4, \n                name: evol3, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolution.data.chain.evolves_to[0]?.evolves_to[0]?.evolves_to[0]?.species.url.split('/')[evolution.data.chain.evolves_to[0]?.evolves_to[0]?.evolves_to[0]?.species.url.split('/').length - 2]}.png`});\n            }\n            // put them all together\n            evolves = [...evolves, ...manyEvols];\n            // get any evolve item images and data\n            evolves.forEach(async i => { \n              let itemData = '';\n              if (i.evolveItemUrl) {\n                itemData = await getAnyUrl(i.evolveItemUrl);\n                i.evolveItemImg = itemData.sprites.default;\n                this.setState({evolutionChain: evolves});\n              }\n            });\n\n            // German name\n            deName = speciesData.names.find(i => i.language.name === 'de').name;\n            jaName = speciesData.names.find(i => i.language.name === 'ja').name;\n            genus = speciesData.genera?.find(i => i.language.name === 'en').genus;\n          }\n          const moves = pokemon.moves.map(i => i.move.name);\n          const types = [];\n          pokemon.types.forEach(async (i) => {\n            const typeData = await getAnyUrl(i.type.url);\n            if (typeData) {\n              types.push({name: i.type.name, url: i.type.url, data: typeData});\n            }\n            this.setState({types});\n          });\n\n          this.setState({\n            isLoading: false,\n            pokemon: pokemon.name,\n            imgFront: pokemon.sprites.front_default,\n            imgBack: pokemon.sprites.back_default,\n            imgFrontShiny: pokemon.sprites.front_shiny,\n            imgBackShiny: pokemon.sprites.back_shiny,\n            imgFrontFemale: pokemon.sprites.front_female,\n            imgBackFemale: pokemon.sprites.back_female,\n            imgFrontShinyFemale: pokemon.sprites.front_shiny_female,\n            imgBackShinyFemale: pokemon.sprites.back_shiny_female,\n            officialArt: pokemon.sprites.other['official-artwork']?.front_default,\n            moves,\n            types,\n            evolutionChain: evolves,\n            searchInput: pokemon.name,\n            deName,\n            jaName,\n            isBaby,\n            isMythical,\n            isLegendary,\n            generation,\n            habitat,\n            growthRate,\n            shape,\n            varieties: varietiesList,\n            genus,\n            mainRegion,\n            description,\n            pokedexId: speciesData.pokedex_numbers[0]?.entry_number,\n            regionSpecies,\n            shapeSpecies,\n            growthRateSpecies,\n            habitatSpecies,\n            allItems,\n            heldItems\n          });\n        } else if (pokemon && pokemon.includes('404')) {\n          const foundAlternativeName = this.checkPokemonName(this.state.searchInput.toLowerCase().trim());\n          if (foundAlternativeName) {\n            this.handleSearchCall(foundAlternativeName.name);\n          } else {\n            this.setState({\n              pokemon: 'Try your search again, because this pokemon does not exist!',\n              isLoading: false,\n              shinyMode: false,\n              imgFront: '',\n              imgBack: '',\n              imgFrontFemale: '',\n              imgBackFemale: '',\n              imgFrontShiny: '',\n              imgBackShiny: '',\n              imgFrontShinyFemale: '',\n              imgBackShinyFemale: '',\n              officialArt: '',\n              searchInput: '',\n              moves: [],\n              types: [],\n              evolutionChain: [],\n              isBaby: false,\n              isMythical: false,\n              isLegendary: false,\n              deName: '',\n              jaName: '',\n              generation: '',\n              habitat: '',\n              growthRate: '',\n              shape: '',\n              varieties: [],\n              genus: '',\n              mainRegion: '',\n              description: '',\n              pokedexId: '',\n              regionSpecies: [],\n              shapeSpecies: [],\n              growthRateSpecies: [],\n              habitatSpecies: [],\n              heldItems: []\n            });\n          }\n        }\n      }\n    }\n\n    handleRandomPokemon = async () => {\n      let randomPokemonData = await getRandomPokemon();\n      if (randomPokemonData && typeof randomPokemonData === 'string' && randomPokemonData.includes('Error')) {\n        this.handleRandomPokemon();\n      }\n      this.setState({ isLoading: true });\n      if (randomPokemonData && randomPokemonData.name) {\n        this.handleSearchCall(randomPokemonData.id);\n      }\n    }\n\n    clearInput = () => this.setState({searchInput: ''})\n\n    render() {\n      const {\n        pokemon, \n        moves,\n        imgFront,\n        imgBack,\n        imgFrontShiny,\n        imgBackShiny,\n        imgFrontFemale,\n        imgBackFemale,\n        imgFrontShinyFemale,\n        imgBackShinyFemale,\n        officialArt,\n        shinyMode,\n        isLoading,\n        types,\n        searchInput,\n        evolutionChain,\n        deName,\n        jaName,\n        isBaby,\n        isMythical,\n        isLegendary,\n        generation,\n        habitat,\n        growthRate,\n        shape,\n        varieties,\n        genus,\n        mainRegion,\n        description,\n        pokedexId,\n        // allPokemon,\n        regionSpecies,\n        shapeSpecies,\n        growthRateSpecies,\n        habitatSpecies,\n        allItems,\n        heldItems\n      } = this.state;\n      const pokemonName = pokemon && pokemon.length ? pokemon[0].toUpperCase() + pokemon.slice(1, pokemon.length + 1).toLowerCase() : null;\n      const lastLetters = generation ? generation.split('-')[1] : '';\n      const temp = generation?.split('-')[0];\n      const gen = temp ? temp[0].toUpperCase() + temp.slice(1, temp.length + 1).toLowerCase() + ' ' + lastLetters.toUpperCase() : null;\n      const habitatDisplayed = habitat && habitat !== null && typeof habitat === 'string' ? habitat.split('-').join(' ') : habitat ? habitat.name || '' : '';\n      const growthRateDisplayed = growthRate ? growthRate.split('-').join(' ') : '';\n      const shapeDisplayed = shape ? shape.split('-').join(' ') : '';\n      const formatLev1 = description.split('\\f').join(' ').split('POKéMON').join('Pokémon').split(',').join(', ');\n      const formatLev2 = formatLev1.split('\\n').join(' ').split('.').join('. ').split(pokemon.toUpperCase())?.join(pokemonName);\n      return (\n        <div className='display'>\n          <div>\n            <h1>Search any Pokémon!</h1>\n          </div>\n          <div className='search-container'>\n            <input \n              className='search-input' \n              onKeyDown={this.handleOnEnter} \n              onChange={this.handleUpdateInput} \n              value={searchInput}\n              placeholder='Name or Pokédex ID...' />\n            <div className='clear' onClick={this.clearInput}>x</div>\n            <div className='search-button' onClick={this.handleSearchCall}>Search!</div>\n          </div>\n          <div className='search-button' onClick={this.handleRandomPokemon}>Random!</div>\n          {isLoading ? (\n            <div>\n              <img className='loading' src={Pokeball} alt='loading'/>\n            </div>) :\n            (<div className='results-container'>\n              {pokemon ? (\n                <div style={{\n                  backgroundColor: 'azure',\n                  border: '5px solid #fff',\n                  borderRadius: '15px'\n                }}>\n                  <div style={{ color: 'black' }}>\n                    <div className='name-container'>\n                      <h2>{pokemonName}</h2>\n                      {jaName ? <em>Japanese: {jaName}</em> : null}\n                      {deName ? <em>German: {deName}</em> : null}\n                    </div>\n                    {types.length ? <span><ul className='types-list'>\n                      <h3>Type(s):</h3> {types.map(type => <li key={type.name}>{type.name}</li>)}\n                    </ul></span> : null}\n                  </div>\n                  {imgFrontShiny || imgBackShiny ? (\n                    <div \n                      onClick={this.toggleShinyMode}\n                      className={shinyMode ? 'shiny-button' : 'normal-button'}>\n                      Shiny Mode {shinyMode ? 'On' : 'Off'}\n                    </div>) : null}\n                  {shinyMode ? (<div className='picture-box'>\n                    {imgBackShinyFemale || imgFrontShinyFemale ? 'Male:' : null}\n                    <div className='picture-group'>\n                      {imgFrontShiny ?\n                        <img className='pokemon-front' src={imgFrontShiny} alt={pokemon} />\n                        : null}\n                      {imgBackShiny ?\n                        <img className='pokemon-front' src={imgBackShiny} alt={pokemon} />\n                        : null}\n                    </div>\n                    {imgBackShinyFemale || imgFrontShinyFemale ? 'Female:' : null}\n                    <div className='picture-group'>\n                      {imgFrontShinyFemale ?\n                        <img className='pokemon-front' src={imgFrontShinyFemale} alt={pokemon} />\n                        : null}\n                      {imgBackShinyFemale ?\n                        <img className='pokemon-front' src={imgBackShinyFemale} alt={pokemon} />\n                        : null}\n                    </div>\n                  </div>) : (<div className='picture-box'>\n                    {imgBackFemale || imgFrontFemale ? 'Male:' : null}\n                    <div className='picture-group'>\n                      {imgFront ?\n                        <img className='pokemon-front' src={imgFront} alt={pokemon} />\n                        : null}\n                      {imgBack ?\n                        <img className='pokemon-front' src={imgBack} alt={pokemon} />\n                        : null}\n                    </div>\n                    {imgBackFemale || imgFrontFemale ? 'Female:' : null}\n                    <div className='picture-group'>\n                      {imgFrontFemale ?\n                        <img className='pokemon-front' src={imgFrontFemale} alt={pokemon} />\n                        : null}\n                      {imgBackFemale ?\n                        <img className='pokemon-front' src={imgBackFemale} alt={pokemon} />\n                        : null}\n                    </div>\n                  </div>)}\n                  <div style={{color: 'black', marginTop: 'auto'}}>\n                    {isBaby ? 'This pokemon is a baby!' : null}\n                    {isMythical ? 'This pokemon is mythical.' : null}\n                    {isLegendary ? 'This pokemon is legendary.' : null}\n                  </div>\n                </div>) : null}\n              {moves && moves.length ? <div className='moves-list'>\n                <ul>\n                  <h3>{moves.length} Moves:</h3> {moves.map(move => <li key={move}>{move}</li>)}\n                </ul>\n              </div> : null}\n            </div>)}\n          {!isLoading && pokemon && (habitatDisplayed || growthRateDisplayed || shapeDisplayed) ? \n            <div className='data-rows'>\n              <strong>{gen}</strong>\n              {mainRegion ? <p>Main Region: {mainRegion}</p> : null}\n              {habitatDisplayed ? <p>Habitat: {habitatDisplayed}</p> : null}\n              {growthRateDisplayed ? <p>Growth Rate: {growthRateDisplayed}</p> : null}\n              {shapeDisplayed ? <p>Shape: {shapeDisplayed}</p> : null}\n              {genus ? <p>Genus: {genus}</p> : null}\n              {pokedexId && pokedexId < 899 ? <p>Pokédex ID: {pokedexId}</p> : null}\n              {heldItems && heldItems.length ? <div><p>Held Items:</p> {heldItems.map(i => <div className='held-item-box' key={i.name}><img src={i.imgUrl} alt={i.name} />{i.name}</div>)}</div> : null}\n              {officialArt ? <OfficialArtModal officialArtImg={officialArt} pokemonName={pokemonName} /> : null}\n              {description ? <div className='divider' /> : null}\n              {description ? <p>{formatLev2}</p> : null}\n              {varieties && varieties.length - 1 ? <strong><p className='varieties-header'>Varieties</p></strong> : null}\n              {varieties && varieties.length - 1 ? <div className='varieties-box'>\n                {varieties.map(variety => (\n                  variety.name !== pokemon ?\n                    <div key={variety.name} className='variety-btn' onClick={() => this.handleSearchCall(variety.name)}>{variety.name}</div> : null\n                ))} </div> : null}\n            </div>\n            : null}\n          {!isLoading && evolutionChain && evolutionChain.length ? (\n            <div className='evolve-container'>\n              <h3>Evolution Chain:</h3>\n              <div className='evolves-list'>\n\n                {evolutionChain.find(i => i.level === 1) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={1} />\n                  : null}\n\n                {evolutionChain.find(i => i.level === 2) ? <div className='arrow'>{' > '}</div> : null}\n                \n                {evolutionChain.find(i => i.level === 2) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={2} />\n                  : null}\n\n                {evolutionChain.find(i => i.level === 3) ? <div className='arrow'>{' > '}</div> : null}\n\n                {evolutionChain.find(i => i.level === 3) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={3} />\n                  : null}\n\n                {/* {evolutionChain.find(i => i.level === 4) ? <div className='arrow'>{' > '}</div> : null}\n\n                {evolutionChain.find(i => i.level === 4) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={4} />\n                  : null} */}\n              </div>\n            </div>) : null}\n          {!isLoading && pokemon && (gen || shape || growthRate || types || habitat) ?\n            <div className='explore-box'>\n              <strong><p className='varieties-header'>Explore</p></strong>\n              <div className='varieties-box'>\n                <Items allItems={allItems} getAnyUrl={getAnyUrl} />\n                {gen ?\n                  <Explore \n                    header={gen} \n                    regionSpecies={regionSpecies} \n                    populateInput={this.populateInput}\n                    handleSearchCall={this.handleSearchCall} /> : null}\n                {shape ?\n                  <Explore \n                    header={shape} \n                    regionSpecies={shapeSpecies} \n                    populateInput={this.populateInput}\n                    handleSearchCall={this.handleSearchCall} /> : null}\n                {growthRate ?\n                  <Explore \n                    header={`${growthRate} growth rate`} \n                    regionSpecies={growthRateSpecies}\n                    populateInput={this.populateInput}\n                    handleSearchCall={this.handleSearchCall} /> : null}\n                {types && types.length ?\n                  types.map(type => \n                    <Explore \n                      key={type.name} \n                      header={`${type.name} type`} \n                      regionSpecies={type.data.pokemon.map(i => {return {name: i.pokemon.name, url: i.pokemon.url};}).filter(j => !j.name.includes('totem'))} \n                      populateInput={this.populateInput}\n                      handleSearchCall={this.handleSearchCall} />\n                  ) : null}\n                {habitat ?\n                  <Explore \n                    header={`${habitat.name} habitat`} \n                    regionSpecies={habitatSpecies}\n                    populateInput={this.populateInput}\n                    handleSearchCall={this.handleSearchCall} /> : null}\n              </div>\n            </div> : null}\n        </div>\n      );\n    }\n}\n\nMain.propTypes = {\n  // color: PropTypes.string\n};\n\nexport default Main;","/* eslint-disable react/react-in-jsx-scope */\nimport './App.css';\nimport Main from './components/main/main.js';\nimport json from '../package.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Main />\n        <h3 className='version-box'>Version: {json.version}</h3>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}