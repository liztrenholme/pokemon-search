{"version":3,"sources":["modules/index.js","components/images/Pokeball.png","components/Evolution/index.js","components/main/main.js","App.js","reportWebVitals.js","index.js"],"names":["getPokemonData","pokemonName","a","data","axios","get","toLowerCase","console","log","Object","keys","getAnyUrl","url","getRandomPokemon","randNum","Math","floor","random","Evolution","className","style","display","maxWidth","justifyContent","flexWrap","flexDirection","maxHeight","transform","this","props","evolutionChain","map","form","level","selectedLevel","onClick","handleSearchCall","imageUrl","split","length","name","evolveItemImg","src","alt","evolveItem","Component","Main","state","isLoading","shinyMode","pokemon","imgFront","imgBack","imgFrontFemale","imgBackFemale","imgFrontShiny","imgBackShiny","imgFrontShinyFemale","imgBackShinyFemale","searchInput","moves","types","deName","jaName","isBaby","isMythical","isLegendary","generation","habitat","growthRate","shape","varieties","allPokemon","genus","mainRegion","description","pokedexId","handleUpdateInput","e","setState","target","value","handleOnEnter","key","toggleShinyMode","checkPokemonName","find","i","includes","newPokemon","evolves","varietiesList","species","speciesData","is_baby","is_mythical","is_legendary","mainRegionData","main_region","growth_rate","genera","language","flavor_text_entries","flavor_text","forEach","push","evolution","evolution_chain","firstLevel","chain","evol3","evolves_to","manyEvols","evolution_details","held_item","join","evolveItemUrl","itemData","sprites","default","names","move","type","front_default","back_default","front_shiny","back_shiny","front_female","back_female","front_shiny_female","back_shiny_female","pokedex_numbers","entry_number","foundAlternativeName","trim","handleRandomPokemon","randomPokemonData","id","clearInput","results","toUpperCase","slice","lastLetters","temp","gen","habitatDisplayed","growthRateDisplayed","shapeDisplayed","formatLev2","onKeyDown","onChange","placeholder","Pokeball","backgroundColor","border","borderRadius","color","marginTop","variety","App","json","version","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3cc4ccf.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport axios from 'axios';\n\nexport const getPokemonData = async (pokemonName) => {\n  let data = {};\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/pokemon/${typeof pokemonName === 'string' ? pokemonName.toLowerCase() : pokemonName}`);\n    \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getAnyUrl = async (url) => {\n  let data = {};\n  try {\n    data = await axios.get(url);\n    \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getEvolutionData = async (pokemonId) => {\n  let data = {};\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/evolution-chain/${pokemonId}/`);\n    \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getPokemonSpeciesData = async (pokemonId) => {\n  let data = {};\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${pokemonId}`);\n        \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};\n\nexport const getRandomPokemon = async () => {\n  let data = {};\n  const randNum = Math.floor(Math.random() * 898);\n  try {\n    data = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${randNum}`);\n        \n  } catch(e) {\n    console.log('error fetching', e);\n    return 'Error ' + e; \n  }\n  if (data && Object.keys(data)) {\n    return data.data;\n  }\n};","export default __webpack_public_path__ + \"static/media/Pokeball.32cfee51.png\";","import './evolution.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Evolution extends Component {\n  render() {\n    return (\n      <div className='level-two'\n        style={{\n          display: 'flex',\n          maxWidth: '6em',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n          flexDirection: 'column',\n          maxHeight: '30em',\n          transform: 'scale(0.75, 0.75)'\n        }}>\n        {this.props.evolutionChain.map((form) => form.level === this.props.selectedLevel ? <div onClick={() => this.props.handleSearchCall(form.imageUrl?.split('/')[form.imageUrl.split('/').length - 1].split('.png')[0] || form.name)} \n          className='evolve-item' \n          key={form.name}>\n          <div className='images-box'>\n            {form.evolveItemImg ? <img className='held-item' src={form.evolveItemImg} alt={form.evolveItem} /> : null}\n            <img className='evolImg' src={form.imageUrl} alt={form.name} />\n          </div>\n          {form.evolveItem ? <span>+ {form.evolveItem}</span> : null}\n          {form.name}\n\n        </div> : null)}\n      </div>\n    );\n  }\n}\n\nEvolution.propTypes = {\n  evolutionChain: PropTypes.array,\n  handleSearchCall: PropTypes.func,\n  selectedLevel: PropTypes.number\n};\n\nexport default Evolution;","/* eslint-disable no-console */\nimport React, { Component } from 'react';\nimport './main.css';\n// import PropTypes from 'prop-types';\nimport 'whatwg-fetch';\nimport {\n  getPokemonData,\n  // getPokemonSpeciesData,\n  getRandomPokemon,\n  //  getPokemonForms\n  getAnyUrl\n} from '../../modules';\nimport Pokeball from '../images/Pokeball.png';\nimport Evolution from '../Evolution';\nimport axios from 'axios';\n\nclass Main extends Component {\n    state = {\n      isLoading: false,\n      shinyMode: false,\n      pokemon: '',\n      imgFront: '',\n      imgBack: '',\n      imgFrontFemale: '',\n      imgBackFemale: '',\n      imgFrontShiny: '',\n      imgBackShiny: '',\n      imgFrontShinyFemale: '',\n      imgBackShinyFemale: '',\n      searchInput: '',\n      moves: [],\n      types: [],\n      evolutionChain: [],\n      deName: '',\n      jaName: '',\n      isBaby: false,\n      isMythical: false,\n      isLegendary: false,\n      generation: '',\n      habitat: '',\n      growthRate: '',\n      shape: '',\n      varieties: [],\n      allPokemon: [],\n      genus: '',\n      mainRegion: '',\n      description: '',\n      pokedexId: ''\n    }\n\n    async componentDidMount() {\n      const allPokemon = await getAnyUrl('https://pokeapi.co/api/v2/pokemon/?limit=1200');\n      if (allPokemon && allPokemon.results) {\n        this.setState({allPokemon: allPokemon.results});\n      }\n    }\n\n    handleUpdateInput = (e) => {\n      this.setState({ searchInput: e.target.value });\n    }\n\n    handleOnEnter = (e) => {\n      if (e.key === 'Enter') {\n        this.handleSearchCall();\n      }\n    }\n\n    toggleShinyMode = () => this.state.shinyMode ? this.setState({shinyMode: false}) : this.setState({shinyMode: true})\n\n    checkPokemonName = (pokemonName) => {\n      return this.state.allPokemon.find(i => i.name.includes(pokemonName));\n    }\n    \n    handleSearchCall = async (newPokemon) => {\n      if ((newPokemon && typeof newPokemon === 'string') || (newPokemon && typeof newPokemon === 'number') || this.state.searchInput) {\n        this.setState({ isLoading: true });\n        const pokemon = await getPokemonData((typeof newPokemon === 'string') || (typeof newPokemon === 'number') ? newPokemon : this.state.searchInput);\n        let evolves = [];\n        let deName = '';\n        let jaName = '';\n        let isBaby = false;\n        let isMythical = false;\n        let isLegendary = false;\n        let generation = '';\n        let habitat = '';\n        let growthRate = '';\n        let shape = '';\n        let genus = '';\n        const varietiesList = [];\n        let mainRegion = '';\n        let description = '';\n        if (pokemon && pokemon.name) {\n        // const pokemonId = pokemon.id;\n          const speciesData = await getAnyUrl(pokemon.species.url); // getPokemonSpeciesData(pokemon.species.url || pokemonId);\n          isBaby = speciesData.is_baby;\n          isMythical = speciesData.is_mythical;\n          isLegendary = speciesData.is_legendary;\n          generation = speciesData.generation?.name;\n          const mainRegionData = await getAnyUrl(speciesData.generation?.url);\n          mainRegion = mainRegionData?.main_region?.name;\n          habitat = speciesData.habitat;\n          growthRate = speciesData.growth_rate?.name;\n          shape = speciesData.shape?.name;\n\n          speciesData.genera?.find(i => i.language.name === 'en').genus;\n          description = speciesData.flavor_text_entries?.find(i => i.language.name === 'en').flavor_text;\n          const varieties = speciesData.varieties;\n        \n          if (varieties && varieties.length) {\n            varieties.forEach(form => !form.pokemon?.name.includes('starter') && !form.pokemon?.name.includes('world-cap') \n              ? varietiesList.push({name: form.pokemon?.name, url: form.pokemon?.url}) : null);\n          }\n          let evolution = null;\n          if (speciesData && speciesData.evolution_chain) {      \n            evolution = await axios.get(speciesData.evolution_chain.url);\n          }\n          if (evolution && evolution.data) {\n            const firstLevel = evolution.data.chain.species.name;\n            const evol3 = evolution.data.chain.evolves_to[0]?.evolves_to[0]?.evolves_to[0]?.species.name;\n\n            const manyEvols = [];\n            // level 2\n            evolution.data.chain.evolves_to.forEach(i => manyEvols.push(\n              {\n                level: 2, \n                name: i.species.name, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i.species.url.split('/')[i.species.url.split('/').length - 2]}.png`,\n                evolveItem: i.evolution_details[0].held_item?.name.split('-').join(' '),\n                evolveItemUrl: i.evolution_details[0].held_item?.url\n              }\n            ));\n            // level 3\n            evolution.data.chain.evolves_to[0]?.evolves_to.forEach(i => manyEvols.push(\n              {\n                level: 3, \n                name: i.species.name, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i.species.url.split('/')[i.species.url.split('/').length - 2]}.png`,\n                evolveItem: i.evolution_details[0].held_item?.name,\n                evolveItemUrl: i.evolution_details[0].held_item?.url\n              }\n            ));\n            evolution.data.chain.evolves_to[1]?.evolves_to.forEach(i => manyEvols.push(\n              {\n                level: 3, \n                name: i.species.name, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i.species.url.split('/')[i.species.url.split('/').length - 2]}.png`,\n                evolveItem: i.evolution_details[0].held_item?.name.split('-').join(' '),\n                evolveItemUrl: i.evolution_details[0].held_item?.url\n              }\n            ));\n            // level 1\n            if (firstLevel) {\n              evolves.push({\n                level: 1, \n                name: firstLevel, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolution.data.chain.species.url.split('/')[evolution.data.chain.species.url.split('/').length - 2]}.png`,\n              });\n            }\n            // level 4 (probably will never be used)\n            if (evol3) {\n              evolves.push({\n                level: 4, \n                name: evol3, \n                imageUrl: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${evolution.data.chain.evolves_to[0]?.evolves_to[0]?.evolves_to[0]?.species.url.split('/')[evolution.data.chain.evolves_to[0]?.evolves_to[0]?.evolves_to[0]?.species.url.split('/').length - 2]}.png`});\n            }\n            // put them all together\n            evolves = [...evolves, ...manyEvols];\n            // get any evolve item images and data\n            evolves.forEach(async i => { \n              let itemData = '';\n              if (i.evolveItemUrl) {\n                itemData = await getAnyUrl(i.evolveItemUrl);\n                console.log(itemData);\n                i.evolveItemImg = itemData.sprites.default;\n                this.setState({evolutionChain: evolves});\n              }\n            });\n\n            // German name\n            deName = speciesData.names.find(i => i.language.name === 'de').name;\n            jaName = speciesData.names.find(i => i.language.name === 'ja').name;\n            genus = speciesData.genera?.find(i => i.language.name === 'en').genus;\n          }\n          const moves = pokemon.moves.map(i => i.move.name);\n          const types = pokemon.types.map(i => i.type.name);\n          this.setState({\n            isLoading: false,\n            pokemon: pokemon.name,\n            imgFront: pokemon.sprites.front_default,\n            imgBack: pokemon.sprites.back_default,\n            imgFrontShiny: pokemon.sprites.front_shiny,\n            imgBackShiny: pokemon.sprites.back_shiny,\n            imgFrontFemale: pokemon.sprites.front_female,\n            imgBackFemale: pokemon.sprites.back_female,\n            imgFrontShinyFemale: pokemon.sprites.front_shiny_female,\n            imgBackShinyFemale: pokemon.sprites.back_shiny_female,\n            moves,\n            types,\n            evolutionChain: evolves,\n            searchInput: pokemon.name,\n            deName,\n            jaName,\n            isBaby,\n            isMythical,\n            isLegendary,\n            generation,\n            habitat,\n            growthRate,\n            shape,\n            varieties: varietiesList,\n            genus,\n            mainRegion,\n            description,\n            pokedexId: speciesData.pokedex_numbers[0]?.entry_number\n          });\n        } else if (pokemon && pokemon.includes('404')) {\n          const foundAlternativeName = this.checkPokemonName(this.state.searchInput.toLowerCase().trim());\n          if (foundAlternativeName) {\n            this.handleSearchCall(foundAlternativeName.name);\n          } else {\n            this.setState({\n              pokemon: 'Try your search again, because this pokemon does not exist!',\n              isLoading: false,\n              shinyMode: false,\n              imgFront: '',\n              imgBack: '',\n              imgFrontFemale: '',\n              imgBackFemale: '',\n              imgFrontShiny: '',\n              imgBackShiny: '',\n              imgFrontShinyFemale: '',\n              imgBackShinyFemale: '',\n              searchInput: '',\n              moves: [],\n              types: [],\n              evolutionChain: [],\n              isBaby: false,\n              isMythical: false,\n              isLegendary: false,\n              deName: '',\n              jaName: '',\n              generation: '',\n              habitat: '',\n              growthRate: '',\n              shape: '',\n              varieties: [],\n              genus: '',\n              mainRegion: '',\n              description: '',\n              pokedexId: ''\n            });\n          }\n        }\n      }\n    }\n\n    handleRandomPokemon = async () => {\n      let randomPokemonData = await getRandomPokemon();\n      if (randomPokemonData && typeof randomPokemonData === 'string' && randomPokemonData.includes('Error')) {\n        this.handleRandomPokemon();\n      }\n      this.setState({ isLoading: true });\n      if (randomPokemonData && randomPokemonData.name) {\n        this.handleSearchCall(randomPokemonData.id);\n      }\n    }\n\n    clearInput = () => this.setState({searchInput: ''})\n\n    render() {\n      const {\n        pokemon, \n        moves,\n        imgFront,\n        imgBack,\n        imgFrontShiny,\n        imgBackShiny,\n        imgFrontFemale,\n        imgBackFemale,\n        imgFrontShinyFemale,\n        imgBackShinyFemale,\n        shinyMode,\n        isLoading,\n        types,\n        searchInput,\n        evolutionChain,\n        deName,\n        jaName,\n        isBaby,\n        isMythical,\n        isLegendary,\n        generation,\n        habitat,\n        growthRate,\n        shape,\n        varieties,\n        genus,\n        mainRegion,\n        description,\n        pokedexId\n      } = this.state;\n      const pokemonName = pokemon && pokemon.length ? pokemon[0].toUpperCase() + pokemon.slice(1, pokemon.length + 1).toLowerCase() : null;\n      const lastLetters = generation ? generation.split('-')[1] : '';\n      const temp = generation?.split('-')[0];\n      const gen = temp ? temp[0].toUpperCase() + temp.slice(1, temp.length + 1).toLowerCase() + ' ' + lastLetters.toUpperCase() : null;\n      const habitatDisplayed = habitat && habitat !== null && typeof habitat === 'string' ? habitat.split('-').join(' ') : habitat ? habitat.name || '' : '';\n      const growthRateDisplayed = growthRate ? growthRate.split('-').join(' ') : '';\n      const shapeDisplayed = shape ? shape.split('-').join(' ') : '';\n      const formatLev1 = description.split('\\f').join(' ').split('POKéMON').join('Pokémon').split(',').join(', ');\n      const formatLev2 = formatLev1.split('\\n').join(' ').split('.').join('. ').split(pokemon.toUpperCase())?.join(pokemonName);\n      return (\n        <div className='display'>\n          <div>\n            <h1>Search any Pokémon!</h1>\n          </div>\n          <div className='search-container'>\n            <input \n              className='search-input' \n              onKeyDown={this.handleOnEnter} \n              onChange={this.handleUpdateInput} \n              value={searchInput}\n              placeholder='Name or Pokédex ID...' />\n            <div className='clear' onClick={this.clearInput}>x</div>\n            <div className='search-button' onClick={this.handleSearchCall}>Search!</div>\n          </div>\n          <div className='search-button' onClick={this.handleRandomPokemon}>Random!</div>\n          {isLoading ? (\n            <div>\n              <img className='loading' src={Pokeball} alt='loading'/>\n            </div>) :\n            (<div className='results-container'>\n              {pokemon ? (\n                <div style={{\n                  backgroundColor: 'azure',\n                  border: '5px solid #fff',\n                  borderRadius: '15px'\n                }}>\n                  <div style={{ color: 'black' }}>\n                    <div className='name-container'>\n                      <h2>{pokemonName}</h2>\n                      {jaName ? <em>Japanese: {jaName}</em> : null}\n                      {deName ? <em>German: {deName}</em> : null}\n                    </div>\n                    {types.length ? <span><ul className='types-list'>\n                      <h3>Type(s):</h3> {types.map(type => <li key={type}>{type}</li>)}\n                    </ul></span> : null}\n                  </div>\n                  {imgFrontShiny || imgBackShiny ? (\n                    <div \n                      onClick={this.toggleShinyMode} \n                      className={shinyMode ? 'shiny-button' : 'normal-button'}>\n                      Shiny Mode {shinyMode ? 'On' : 'Off'}\n                    </div>) : null}\n                  {shinyMode ? (<div className='picture-box'>\n                    {imgBackShinyFemale || imgFrontShinyFemale ? 'Male:' : null}\n                    <div className='picture-group'>\n                      {imgFrontShiny ?\n                        <img className='pokemon-front' src={imgFrontShiny} alt={pokemon} />\n                        : null}\n                      {imgBackShiny ?\n                        <img className='pokemon-front' src={imgBackShiny} alt={pokemon} />\n                        : null}\n                    </div>\n                    {imgBackShinyFemale || imgFrontShinyFemale ? 'Female:' : null}\n                    <div className='picture-group'>\n                      {imgFrontShinyFemale ?\n                        <img className='pokemon-front' src={imgFrontShinyFemale} alt={pokemon} />\n                        : null}\n                      {imgBackShinyFemale ?\n                        <img className='pokemon-front' src={imgBackShinyFemale} alt={pokemon} />\n                        : null}\n                    </div>\n                  </div>) : (<div className='picture-box'>\n                    {imgBackFemale || imgFrontFemale ? 'Male:' : null}\n                    <div className='picture-group'>\n                      {imgFront ?\n                        <img className='pokemon-front' src={imgFront} alt={pokemon} />\n                        : null}\n                      {imgBack ?\n                        <img className='pokemon-front' src={imgBack} alt={pokemon} />\n                        : null}\n                    </div>\n                    {imgBackFemale || imgFrontFemale ? 'Female:' : null}\n                    <div className='picture-group'>\n                      {imgFrontFemale ?\n                        <img className='pokemon-front' src={imgFrontFemale} alt={pokemon} />\n                        : null}\n                      {imgBackFemale ?\n                        <img className='pokemon-front' src={imgBackFemale} alt={pokemon} />\n                        : null}\n                    </div>\n                  </div>)}\n                  <div style={{color: 'black', marginTop: 'auto'}}>\n                    {isBaby ? 'This pokemon is a baby!' : null}\n                    {isMythical ? 'This pokemon is mythical.' : null}\n                    {isLegendary ? 'This pokemon is legendary.' : null}\n                  </div>\n                </div>) : null}\n              {moves && moves.length ? <div className='moves-list'>\n                <ul>\n                  <h3>{moves.length} Moves:</h3> {moves.map(move => <li key={move}>{move}</li>)}\n                </ul>\n              </div> : null}\n            </div>)}\n          {!isLoading && pokemon && (habitatDisplayed || growthRateDisplayed || shapeDisplayed) ? \n            <div className='data-rows'>\n              <strong>{gen}</strong>\n              {mainRegion ? <p>Main Region: {mainRegion}</p> : null}\n              {habitatDisplayed ? <p>Habitat: {habitatDisplayed}</p> : null}\n              {growthRateDisplayed ? <p>Growth Rate: {growthRateDisplayed}</p> : null}\n              {shapeDisplayed ? <p>Shape: {shapeDisplayed}</p> : null}\n              {genus ? <p>Genus: {genus}</p> : null}\n              {pokedexId && pokedexId < 899 ? <p>Pokédex ID: {pokedexId}</p> : null}\n              {description ? <div className='divider' /> : null}\n              {description ? <p>{formatLev2}</p> : null}\n              {varieties && varieties.length - 1 ? <div className='varieties-box'>\n                <strong>Varieties</strong><div />{varieties.map(variety => (\n                  variety.name !== pokemon ?\n                    <div key={variety.name} className='variety-btn' onClick={() => this.handleSearchCall(variety.name)}>{variety.name}</div> : null\n                ))} </div> : null}\n            </div>\n            : null}\n          {!isLoading && evolutionChain && evolutionChain.length ? (\n            <div className='evolve-container'>\n              <h3>Evolution Chain:</h3>\n              <div className='evolves-list'>\n\n                {evolutionChain.find(i => i.level === 1) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={1} />\n                  : null}\n\n                {evolutionChain.find(i => i.level === 2) ? <div className='arrow'>{' > '}</div> : null}\n                \n                {evolutionChain.find(i => i.level === 2) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={2} />\n                  : null}\n\n                {evolutionChain.find(i => i.level === 3) ? <div className='arrow'>{' > '}</div> : null}\n\n                {evolutionChain.find(i => i.level === 3) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={3} />\n                  : null}\n\n                {/* {evolutionChain.find(i => i.level === 4) ? <div className='arrow'>{' > '}</div> : null}\n\n                {evolutionChain.find(i => i.level === 4) ?\n                  <Evolution\n                    evolutionChain={evolutionChain}\n                    handleSearchCall={this.handleSearchCall}\n                    selectedLevel={4} />\n                  : null} */}\n              </div>\n            </div>) : null}\n        </div>\n      );\n    }\n}\n\nMain.propTypes = {\n  // color: PropTypes.string\n};\n\nexport default Main;","/* eslint-disable react/react-in-jsx-scope */\nimport './App.css';\nimport Main from './components/main/main.js';\nimport json from '../package.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Main />\n        <h3 className='version-box'>Version: {json.version}</h3>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}